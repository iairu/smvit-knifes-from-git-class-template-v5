"use strict";(globalThis.webpackChunkknife_preview=globalThis.webpackChunkknife_preview||[]).push([[6983],{6195:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"sk/case-study-article-content","title":"http://kukuruku.co/hub/diy/usb-killer","description":"USB devices are ubiquitous tools in modern technology, but not all of them are harmless. Among the most concerning developments is the \u201cUSB Killer\u201d\u2014a device specifically designed to damage or destroy hardware through a high-voltage electrical surge. This guide explores the mechanics of USB Killers, the risks they pose, and practical steps to safeguard your devices and sensitive data from these malicious tools.","source":"@site/docs/sk/case-study-article-content.md","sourceDirName":"sk","slug":"/sk/case-study-article-content","permalink":"/en/sk/case-study-article-content","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var i=n(4848),a=n(8453);const s={},r="http://kukuruku.co/hub/diy/usb-killer",h={},l=[];function d(e){const t={a:"a",h1:"h1",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"httpkukurukucohubdiyusb-killer",children:(0,i.jsx)(t.a,{href:"http://kukuruku.co/hub/diy/usb-killer",children:"http://kukuruku.co/hub/diy/usb-killer"})})}),"\n",(0,i.jsx)(t.p,{children:"USB devices are ubiquitous tools in modern technology, but not all of them are harmless. Among the most concerning developments is the \u201cUSB Killer\u201d\u2014a device specifically designed to damage or destroy hardware through a high-voltage electrical surge. This guide explores the mechanics of USB Killers, the risks they pose, and practical steps to safeguard your devices and sensitive data from these malicious tools.\nWhat Is a USB Killer?"}),"\n",(0,i.jsx)(t.p,{children:"A USB Killer is a seemingly harmless device that resembles a standard USB drive. However, its purpose is anything but benign. When connected to a USB port, it delivers a high-voltage surge back into the system, often resulting in irreparable damage to the device. Originally developed as a proof-of-concept for identifying vulnerabilities, USB Killers are now being misused as malicious tools.\nHow Does It Work?"}),"\n",(0,i.jsx)(t.p,{children:"Energy Harvesting: The device extracts power from the USB port and stores it in internal capacitors.\nVoltage Surge: It rapidly discharges the stored energy, creating a voltage surge that overwhelms the system.\nHardware Damage: Key components like the motherboard, USB controllers, and other connected peripherals can be permanently damaged."}),"\n",(0,i.jsx)(t.p,{children:"Understanding the Risks"}),"\n",(0,i.jsx)(t.p,{children:"The potential damage caused by USB Killers goes beyond physical hardware destruction. These tools can lead to:"}),"\n",(0,i.jsx)(t.p,{children:"Data Loss: Essential files and information may become irretrievable.\nOperational Downtime: Damaged systems can disrupt workflows in businesses or personal use.\nFinancial Costs: Repairs or replacements for affected devices can be costly."}),"\n",(0,i.jsx)(t.p,{children:"How to Protect Your Devices from USB Killers"}),"\n",(0,i.jsx)(t.p,{children:"Avoid Untrusted USB Devices\nOnly use USB devices from reputable sources.\nBe cautious of promotional USB drives or devices with unknown origins.\nImplement Physical Security Measures\nUse port blockers or locks to restrict access to USB ports on your devices.\nStore critical devices in secure locations to prevent unauthorized access.\nDisable Unused Ports\nDisable unused USB ports in your system\u2019s BIOS or through administrative controls.\nLimit USB access to only essential devices.\nInvest in USB Protection Devices\nSpecialized USB protection tools, such as data-only cables, can prevent electrical surges.\nEndpoint security software can monitor USB activities and block suspicious devices."}),"\n",(0,i.jsx)(t.p,{children:"Broader Implications for Data Integrity"}),"\n",(0,i.jsx)(t.p,{children:"While USB Killers represent a clear threat to physical devices, they also highlight the importance of protecting data and content from less visible risks. Just as malicious hardware can compromise systems, unverified or plagiarized content can undermine credibility in digital spaces."}),"\n",(0,i.jsx)(t.p,{children:"For example, ensuring the originality of your content is crucial in academic, professional, and creative contexts. Tools like Paper-Checker.com provide advanced solutions for detecting plagiarism and AI-generated content. By integrating such tools into your workflow, you can maintain the integrity of your work and protect intellectual property.\nConclusion"}),"\n",(0,i.jsx)(t.p,{children:"USB Killers serve as a stark reminder of the vulnerabilities inherent in modern technology. By understanding how these devices operate and adopting preventive measures, you can safeguard your hardware and data. Similarly, taking steps to protect the integrity of your digital content ensures credibility and trustworthiness."}),"\n",(0,i.jsx)(t.p,{children:"Whether securing your devices from malicious tools or ensuring originality in your content, proactive measures are key to staying safe in a rapidly evolving technological landscape."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httpswwwzdnetcomarticleformer-student-destroys-59-university-computers-using-usb-killer-device",children:(0,i.jsx)(t.a,{href:"https://www.zdnet.com/article/former-student-destroys-59-university-computers-using-usb-killer-device/",children:"https://www.zdnet.com/article/former-student-destroys-59-university-computers-using-usb-killer-device/"})}),"\n",(0,i.jsx)(t.p,{children:'An Indian national in the US has pleaded guilty this week to destroying 59 computers at the College of St. Rose, in New York, using a weaponized USB thumb drive named "USB Killer" that he purchased online.\nSecurity'}),"\n",(0,i.jsx)(t.p,{children:"How passkeys work: Your passwordless journey begins here\nThis infamous people search site is back after leaking 3 billion records - how to remove your data from it ASAP\nSyncable vs. non-syncable passkeys: Are roaming authenticators the best of both worlds?\nYes, you need a firewall on Linux - here's why and which to use"}),"\n",(0,i.jsx)(t.p,{children:"The incident took place on February 14, according to court documents obtained by ZDNet, and the suspect, Vishwanath Akuthota, 27, filmed himself while destroying some of the computers."}),"\n",(0,i.jsx)(t.p,{children:'"I\'m going to kill this guy," "it\'s dead," and "it\'s gone. Boom," Akuthota said on recordings obtained by the prosecution.'}),"\n",(0,i.jsx)(t.p,{children:"The suspect destroyed 59 computers, but also seven computer monitors and computer-enhanced podiums that had open USB slots."}),"\n",(0,i.jsx)(t.p,{children:"He did it using USB Killer, a weaponized thumb drive that he purchased from a well-known online store that sells these types of devices."}),"\n",(0,i.jsx)(t.p,{children:"USB Killer devices work by rapidly charging thumb drive capacitors from the USB power supply, and then discharging the electrical current back into the USB slot --all in a matter of seconds-- effectively frying the computer to which the USB Killer device is connected."}),"\n",(0,i.jsx)(t.p,{children:"Equipment damages amounted to $51,109, along with $7,362 in employee time for investigating and replacing destroyed hardware, which Akuthota agreed to pay as part of the plea deal, according to court documents."}),"\n",(0,i.jsx)(t.p,{children:"He graduated College of St. Rose in 2017 with an MBA, and on the night of the incident, he was no longer a student at the college and was residing in the US on a student visa."}),"\n",(0,i.jsx)(t.p,{children:"Akuthota was arrested on February 22 and will be sentenced later this year, on August 12. He faces up to ten years in prison, a fine of up to $250,000, and a term of post-imprisonment supervised release of up to 3 years."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httpsarstechnicacomgadgets201612usb-killer-fries-devices",children:(0,i.jsx)(t.a,{href:"https://arstechnica.com/gadgets/2016/12/usb-killer-fries-devices/",children:"https://arstechnica.com/gadgets/2016/12/usb-killer-fries-devices/"})}),"\n",(0,i.jsx)(t.p,{children:"Last year we wrote about the \u201cUSB Killer\u201d\u2014a DIY USB stick that fried almost everything (laptops, smartphones, consoles, cars) that it was plugged into. Now the USB Killer has been mass produced\u2014you can buy it online for about \xa350/$50. Now everyone can destroy just about every computer that has a USB port. Hooray."}),"\n",(0,i.jsx)(t.p,{children:"The commercialised USB Killer looks like a fairly humdrum memory stick. You can even purchase a \u201cTest Shield\u201d for \xa315/$15, which lets you try out the kill stick\u2014watch the spark of electricity arc between the two wires!\u2014without actually frying the target device, though I\u2019m not sure why you would want to spend \xa365 to do that. The website proudly states that the USB Killer is CE approved, meaning it has passed a number of EU electrical safety directives.\nThe original USB Killer prototype, more clearly showing you the capacitors (the square components) and other parts of the system.\nUSB Killer version 1.0, with hand-soldered bits."}),"\n",(0,i.jsx)(t.p,{children:"The USB Killer is shockingly simple in its operation. As soon as you plug it in, a DC-to-DC converter starts drawing power from the host system and storing electricity in its bank of capacitors (the square-shaped components). When the capacitors reach a potential of -220V, the device dumps all of that electricity into the USB data lines, most likely frying whatever is on the other end. If the host doesn\u2019t just roll over and die, the USB stick does the charge-discharge process again and again until it sizzles."}),"\n",(0,i.jsx)(t.p,{children:"Since the USB Killer has gone on sale, it has been used to fry laptops (including an old ThinkPad and a brand new MacBook Pro), an Xbox One, the new Google Pixel phone, and some cars (infotainment units, rather than whole cars\u2026 for now). Notably, some devices fare better than others, and there\u2019s a range of possible outcomes\u2014the USB Killer doesn\u2019t just nuke everything completely."}),"\n",(0,i.jsx)(t.p,{children:"In the video below you can see that a Galaxy Note 7 loses its USB port (so it can\u2019t be charged), but otherwise remains functional; likewise, a new iPad Pro freaks out while the stick is plugged in, but seems to regain consciousness afterwards. Curiously, the Pixel is fine when a third-party USB-C converter is used, but using the official Google dongle results in a dead device.\nOne guy fries a ton of stuff with the USB Killer."}),"\n",(0,i.jsx)(t.p,{children:"In another video it seems the iPhone 7 Plus suffers a similar fate to the Note 7: the Lightning port is fried, but the rest of the device is okay. You\u2019ll also be glad to hear that the iPhone 4 and iPhone 3GS, connected via a 30-pin dongle, both seem to be immune to the USB Killer. All told, the company behind USB Killer says that 95 percent of devices are susceptible to a USB power surge attack."}),"\n",(0,i.jsx)(t.p,{children:"Without taking a fried device apart it\u2019s impossible to say how extensive the damage actually is. When you see the screen go black, and then not return after a reboot attempt, it\u2019s likely that the surge travelled to the CPU or some other core component. If the victim device was a desktop PC, you might get away with replacing the motherboard\u2014on a mobile or embedded device, diagnosing and fixing the issue is probably going to be more effort than it\u2019s worth."}),"\n",(0,i.jsx)(t.p,{children:"A better solution, of course, is protecting a system against the USB Killer in the first place, though that isn\u2019t an easy task. Electrically, the most simple solution is an opto-isolator: a chip that uses an LED paired with a photodiode to physically isolate one electrical circuit from another. As devices move towards USB-C there\u2019s another possible solution: USB authentication."}),"\n",(0,i.jsx)(t.p,{children:"Neither of those solutions help protect the hundreds of millions\u2014perhaps billions\u2014of devices in the world with unprotected USB ports, though. Cars, airplanes, routers, machines that control industrial centrifuges\u2026 in those cases, the only real defence is physically capping ports or educating people to never insert unknown hardware."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httpswwwusbkillcom",children:(0,i.jsx)(t.a,{href:"https://www.usbkill.com/",children:"https://www.usbkill.com/"})}),"\n",(0,i.jsx)(t.p,{children:"USBKill\nV4.0\nThe new USBKill\nneeds no host power. |"}),"\n",(0,i.jsx)(t.p,{children:"The most powerful USBKill ever. New unstoppable attack modes. Remote controlled. The ultimate pentesting device.\nMore Powerful"}),"\n",(0,i.jsx)(t.p,{children:"Stronger discharge, unlimited run time, bypasses all USB-C & Lightning security.\nNew Attack Modes"}),"\n",(0,i.jsx)(t.p,{children:"Smart-phone, BLE Remote Control, Time-delay, Hidden Magnet Trigger and Classic.\nTest Everything"}),"\n",(0,i.jsx)(t.p,{children:"15+ Adaptors, including: USB-C, iPhone, VGA, DisplayPort, HDMI, MicroUSB & more.\nNever miss a target"}),"\n",(0,i.jsx)(t.p,{children:"Internal Rechargable battery means the USBKill V4 even on devices that are switched off.\nWhat is the USBKill? \u21b7"}),"\n",(0,i.jsx)(t.p,{children:"The USBKill is a device that stress tests hardware. When plugged in power is taken from a USB-Port, multiplied, and discharged into the data-lines, typically disabling an unprotected device."}),"\n",(0,i.jsx)(t.p,{children:"See the USBKill in action \u26a1"}),"\n",(0,i.jsx)(t.p,{children:"Watch the V4 Pro tested against a 2020 Macbook Pro, iPhone 11, Samsung S20, HDMI TV, DisplayPort, Network Device and more.."}),"\n",(0,i.jsx)(t.p,{children:"Used by penetration testers, hardware manufacturers, law-enforcement and industrial clients world-wide, the USBKill has been adopted the industry standard for USB Stress-testing."}),"\n",(0,i.jsx)(t.p,{children:"The USBKill V4 caters specifically to industry needs: significantly more powerful, more flexible, more covert and more compatible."}),"\n",(0,i.jsx)(t.p,{children:"Meet the USBKill V4"}),"\n",(0,i.jsx)(t.p,{children:"The USBKill V4 brings automation, remote control, improved discretion, enhanced performance over a vast vulnerability surface."}),"\n",(0,i.jsx)(t.p,{children:"Learn more now.\nUSBKill V4 Feature Overview\n\u26a1 Powerful Hardware Update"}),"\n",(0,i.jsx)(t.p,{children:"The USBKill has evolved beyond a simple plug-and-zap device. The new V4 hardware framework enables advanced functionality and performance."}),"\n",(0,i.jsx)(t.p,{children:'Aside from\nmore powerful discharges and improved stability, the V4 has an internal, rechargeable battery, which allows for\n"Offline Attacks" - where the host device is not turned on.'}),"\n",(0,i.jsx)(t.p,{children:'"Offline Mode" also bypasses all known USB-C and Lightning (Apple/iPhone) security protocols, rendering the V4 the ultimate device for testing smartphones and modern hardware.'}),"\n",(0,i.jsx)(t.p,{children:"\u23f1\ufe0f Advanced Attack Modes"}),"\n",(0,i.jsx)(t.p,{children:"The USBKill has evolved, and so have the ways to use it. V4 Introduces single pulse and continuous pulse attack modes. By default, the V4 will not activate until triggered - giving pentesters and LEA ultimate discretion. The V4 can be triggered in multiple ways:"}),"\n",(0,i.jsx)(t.p,{children:"Remote Trigger: Trigger a single or continuous attack via dedicated remote control, up to 100m away from the device.\nSmartphone Trigger: Control and trigger single or continuous attacks via the included Android and iOS smartphone app.\nTimed Attack: Schedule a date and time when the USBKill will trigger. The V4 can stay dormant without power for over 200 days.\nMagnetic Trigger: Trigger the USBKill with a magnet (stylish and covert magnetic ring included) by passing your hand over the device.\nClassic Mode: Triggers the instant it is plugged into a USB drive."}),"\n",(0,i.jsx)(t.p,{children:"\ud83d\udd0c Exhaustive Accessories"}),"\n",(0,i.jsx)(t.p,{children:"The USBKill V4 boasts extensive accessories and adaptors, preparing you for any situation."}),"\n",(0,i.jsx)(t.p,{children:"USBKill V4 Tester: The V4 Tester has been completely redesigned to function as a multi-function shield device, providing high-voltage protection and juice-jacking protection."}),"\n",(0,i.jsx)(t.p,{children:"The V4 Adaptors are broken into two familes, Basic and Advanced."}),"\n",(0,i.jsx)(t.p,{children:"Basic Adaptors: USB-C, Lighting (iPhone), MicroUSB, MiniUSB, USB-A Female."}),"\n",(0,i.jsx)(t.p,{children:"Advanced Adaptors: USB-B Male, USB-B Female, VGA (DB15), HDMI Male, HDMI Female-Female, DisplayPort Male, DisplayPort Female-Female, RJ45 Male, RJ-45 Female"}),"\n",(0,i.jsx)(t.p,{children:"The V4 accessories open a vast attack surface for pentesters, covering all possible types of hardware: smartphones, computers, laptops, printers, televisions, network equipment, USB drives, external harddrives, and much more."}),"\n",(0,i.jsx)(t.p,{children:"USBKill V4 Pro"}),"\n",(0,i.jsx)(t.p,{children:"The Professional version of the V4 has wireless, remote & smartphone control, internal battery for offline attacks, is compatible with all accessories, and can be configured in Classic Mode (plug-and-zap) mode."}),"\n",(0,i.jsx)(t.p,{children:"Pro: Kit \u2192 Pro: Standalone \u2192"}),"\n",(0,i.jsx)(t.p,{children:"USBKill V4 Basic"}),"\n",(0,i.jsx)(t.p,{children:"The Basic Edition of the V4 has an internal battery for offline attacks and is compatible with all accessories. It has no wireless and must be triggered manually via the covert Magnet Trigger Ring."}),"\n",(0,i.jsx)(t.p,{children:"Basic: Kit \u2192 Basic: Standalone \u2192"}),"\n",(0,i.jsx)(t.p,{children:"Classic Edition"}),"\n",(0,i.jsx)(t.p,{children:'The Classic Edition is the original USBKill device, with the updated V4 stability. Low-cost, requires no configuration or charging - simply "Plug and Zap".'}),"\n",(0,i.jsx)(t.p,{children:"Classic: Standalone \u2192"}),"\n",(0,i.jsx)(t.p,{children:"Tactical Pack"}),"\n",(0,i.jsx)(t.p,{children:"Designed for Penetration Testers and Industrial clients, the Tactical Pack has every device, accessory and adaptor available, in a professional tool case."}),"\n",(0,i.jsx)(t.p,{children:"Tactical Kit \u2192"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httpswwwtechspotcomnews108394-usb-killer-dead-apple-drops-firewire-support-macoshtml",children:(0,i.jsx)(t.a,{href:"https://www.techspot.com/news/108394-usb-killer-dead-apple-drops-firewire-support-macos.html",children:"https://www.techspot.com/news/108394-usb-killer-dead-apple-drops-firewire-support-macos.html"})}),"\n",(0,i.jsx)(t.p,{children:'The "USB killer" is dead: Apple drops FireWire support in macOS 26\nThe final nail in the coffin for FireWire\nBy Alfonso Maruccia June 20, 2025 at 12:13 PM 14 comments\nThe USB killer is dead: Apple drops FireWire support in macOS 26\nServing tech enthusiasts for over 25 years.\nTechSpot means tech analysis and advice you can trust.'}),"\n",(0,i.jsx)(t.p,{children:"What just happened? FireWire was Apple's ambitious attempt to establish a novel connectivity technology for its computer ecosystem back in the 90s. Now, Cupertino is unceremoniously removing the standard from its modern operating system capabilities."}),"\n",(0,i.jsx)(t.p,{children:'Recently introduced macOS 26 "Tahoe" will bring a new naming scheme for Apple\'s operating system ecosystem, novel features, and a highly questionable Vista-like UI redesign. The upcoming release will also mark the end of official support for outdated FireWire hardware. The so-called "USB killer" that was ultimately defeated by its own irrelevance is no more, at least according to developers testing the beta versions of the new OS.'}),"\n",(0,i.jsx)(t.p,{children:"macOS 26 beta is no longer compatible with first-generation iPods, or likely any other FireWire-based devices. The technology is being fully deprecated, reports confirm. In Tahoe, System Utilities and Finder no longer display FireWire storage devices, even when they are connected via Thunderbolt-to-FireWire adapters."}),"\n",(0,i.jsx)(t.p,{children:"Officially known as IEEE 1394, the FireWire standard was developed by Apple in collaboration with other tech companies, including Sony and Panasonic. Apple first introduced the serial bus technology in some Macintosh models in 1999, as a replacement for the parallel SCSI bus. FireWire competed with USB at a time when it could achieve data transfer rates up to 30 times faster."}),"\n",(0,i.jsx)(t.p,{children:"Despite offering more hardware features and better performance, FireWire was largely confined to Apple's computing ecosystem. The technology was popular for digital video editing, audio equipment, and other professional tasks, but Apple eventually scrapped it as USB and other competing technologies such as Thunderbolt grew in popularity and capability."}),"\n",(0,i.jsx)(t.p,{children:"Cupertino shipped its last iMac with a native FireWire port in 2011, but macOS continued supporting IEEE 1394 technology for several more years. Now, macOS 26 will kill support for good, forcing owners of older hardware peripherals and archivists to preserve legacy Macs or avoid updating the OS entirely.\n// Related Stories"}),"\n",(0,i.jsx)(t.p,{children:"Performance and design complaints mount after iOS 26's Liquid Glass launch\nApple's new MacBook Pro 14 M5 is faster and better, but d\xe9j\xe0 vu"}),"\n",(0,i.jsx)(t.p,{children:"Apple routinely phases out older technology support in macOS, as the company isn't particularly interested in preserving backward compatibility in the way Microsoft largely does with Windows. However, macOS 26 will be especially brutal in this regard, as it will also be the last version to support Intel-based Macs."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httphjdiva-portalorgsmashrecordjsfpiddiva23a1683816dswid1160",children:(0,i.jsx)(t.a,{href:"http://hj.diva-portal.org/smash/record.jsf?pid=diva2%3A1683816&dswid=1160",children:"http://hj.diva-portal.org/smash/record.jsf?pid=diva2%3A1683816&dswid=1160"})}),"\n",(0,i.jsx)(t.p,{children:"Analysis of effective energy consumption of Bluetooth Low Energy versus Bluetooth Classic\nT\xe5qvist, Carl\nJ\xf6nk\xf6ping University, School of Engineering, JTH, Department of Computing.\nLuks, Jonathan\nJ\xf6nk\xf6ping University, School of Engineering, JTH, Department of Computing.\n2022 (English)Independent thesis Basic level (degree of Bachelor), 10 credits / 15 HE creditsStudent thesis\nAbstract [en]"}),"\n",(0,i.jsxs)(t.p,{children:["Wireless technology is used daily across the globe. A very common wireless technology is Bluetooth. The Bluetooth technology exists everywhere, from cars to mobile phones and even kitchen appliances. Recently, Bluetooth Low Energy has added support for another physical layer, LE 2M PHY. This physical layer is supposed to be faster and more energy efficient than its predecessor, LE 1M PHY, with a decrease in range. Because of this new physical layer, Bluetooth Low Energy can now compete with Bluetooth Classic during data transmission, in both speed and energy efficiency. This thesis aims to find the breaking point where Bluetooth Low Energy becomes less energy efficient than Bluetooth Classic, in relation to bit rate speed and total amount of bytes sent. Before experiments were conducted, multiple iterations of an artifact had to be done to end up with an artifact that provides valid and reliable data. The experiments were then conducted by changing the bit rate speed and sending different amounts of bytes. The results from the experiments show that Bluetooth Classic is practically both faster and more energy efficient with its fastest modulation than Bluetooth Low Energy is with LE 2M PHY enabled, even though this should not be the case theoretically. Bluetooth Classic is overall more energy efficient than Bluetooth Low Energy and thus the conclusion of this study is that no breaking points between the two technologies exist.\nPlace, publisher, year, edition, pages\n2022. , p. 45\nKeywords [en]\nBluetooth Classic, Bluetooth Low Energy, Energy efficiency, Internet of Things, Throughput, Wireless technologies\nNational Category\nEnergy Systems\nIdentifiers\nURN: urn:nbn:se:hj:diva-57970ISRN: JU-JTH-DTA-1-20220170OAI: oai",":DiVA",".org",":hj-57970DiVA",", id: diva2:1683816\nExternal cooperation\nKnowit\nSubject / course\nJTH, Computer Engineering\nSupervisors\nAxelsson, Andreas\nExaminers\nAdlemo, Anders\nAvailable from: 2022-08-04 Created: 2022-07-18 Last updated: 2025-10-13Bibliographically approved"]}),"\n",(0,i.jsx)(t.p,{children:"Analysis of effective energy consumption\nof Bluetooth Low Energy versus Bluetooth\nClassic\nMain Subject area: Computer Engineering\nAuthor: Jonathan Luks, Carl T\xe5qvist\nSupervisor: Andreas Axelsson\nJ\xd6NK\xd6PING 2022 June\ni\nThis final thesis has been carried out at the School of Engineering at J\xf6nk\xf6ping\nUniversity within Computer Engineering. The authors are responsible for the presented\nopinions, conclusions, and results.\nExaminer: Anders Adlemo\nSupervisor: Andreas Axelsson\nScope: 15 hp (First-cycle education)\nDate: 2022-06-01\nii\nAbstract\nWireless technology is used daily across the globe. A very common wireless technology\nis Bluetooth. The Bluetooth technology exists everywhere, from cars to mobile phones\nand even kitchen appliances. Recently, Bluetooth Low Energy has added support for\nanother physical layer, LE 2M PHY. This physical layer is supposed to be faster and\nmore energy efficient than its predecessor, LE 1M PHY, with a decrease in range.\nBecause of this new physical layer, Bluetooth Low Energy can now compete with\nBluetooth Classic during data transmission, in both speed and energy efficiency. This\nthesis aims to find the breaking point where Bluetooth Low Energy becomes less energy\nefficient than Bluetooth Classic, in relation to bit rate speed and total amount of bytes\nsent. Before experiments were conducted, multiple iterations of an artifact had to be\ndone to end up with an artifact that provides valid and reliable data. The experiments\nwere then conducted by changing the bit rate speed and sending different amounts of\nbytes. The results from the experiments show that Bluetooth Classic is practically both\nfaster and more energy efficient with its fastest modulation than Bluetooth Low Energy\nis with LE 2M PHY enabled, even though this should not be the case theoretically.\nBluetooth Classic is overall more energy efficient than Bluetooth Low Energy and thus\nthe conclusion of this study is that no breaking points between the two technologies\nexist.\nKeywords\nBluetooth Classic, Bluetooth Low Energy, Energy efficiency, Internet of Things,\nThroughput, Wireless technologies.\niii\nAcknowledgement\nWe would like to give a huge thanks to Filip Doversten from Knowit for all the help\nwe got with the technical aspect of our thesis work. A huge thanks should also be given\nto Knowit for letting us do our thesis work with them and for helping us with equipment\nand guidance.\nWe would also like to thank Andreas Axelsson, our supervisor from J\xf6nk\xf6ping\nUniversity, for the guidance we got through our thesis work.\niv\nTable of content\nAbstract .......................................................................................... ii\nKeywords ........................................................................................ ii\nAcknowledgement ........................................................................ iii\nTable of content ............................................................................ iv"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Introduction ................................................................................ 6\n1.1 PROBLEM STATEMENT ........................................................................................... 6\n1.2 PURPOSE AND RESEARCH QUESTIONS .................................................................... 7\n1.3 SCOPE AND LIMITATIONS....................................................................................... 7\n1.4 DISPOSITION .......................................................................................................... 8"}),"\n",(0,i.jsx)(t.li,{children:"Method and implementation .................................................... 9\n2.1 DATA COLLECTION ................................................................................................ 9\n2.1.1 Design Science Research .............................................................................. 9\n2.1.2 Experiments ................................................................................................ 13\n2.2 DATA ANALYSIS .................................................................................................. 14\n2.3 VALIDITY AND RELIABILITY ................................................................................ 14\n2.4 CONSIDERATIONS ................................................................................................ 15"}),"\n",(0,i.jsx)(t.li,{children:"Technical framework ............................................................... 16\n3.1 BLUETOOTH ........................................................................................................ 16\n3.1.1 Host ............................................................................................................. 16\n3.1.2 Controller .................................................................................................... 18\n3.1.3 Host Controller Interface ............................................................................ 22\n3.1.4 Bluetooth Serial Port Profile ....................................................................... 22\n3.2 ELECTRICAL CONCEPTS ....................................................................................... 23\n3.2.1 Small voltages ............................................................................................. 24\n3.2.2 Burden voltage ............................................................................................ 24\n3.2.3 Shunt resistors ............................................................................................. 24\n3.2.4 Brownout..................................................................................................... 25\n3.3 WHY BLUETOOTH LOW ENERGY IS MORE ENERGY EFFICIENT ............................. 25\nv"}),"\n",(0,i.jsx)(t.li,{children:"Results ....................................................................................... 26\n4.1 EMPIRICAL DATA ................................................................................................. 26"}),"\n",(0,i.jsx)(t.li,{children:"Analysis ..................................................................................... 29\n5.1 ESTIMATED THROUGHPUT VERSUS MEASURED THROUGHPUT .............................. 29\n5.2 ANALYSIS OF RESEARCH QUESTIONS ................................................................... 29\n5.2.1 Research question 1 .................................................................................... 29\n5.2.2 Research question 2 .................................................................................... 31\n5.2.3 Research question 3 .................................................................................... 34"}),"\n",(0,i.jsx)(t.li,{children:"Discussion ................................................................................. 35\n6.1 RESULT DISCUSSION ............................................................................................ 35\n6.1.1 Where is the breaking point when comparing the energy consumption\nefficiency between Bluetooth Classic and Bluetooth Low Energy, depending on\nbit rate speed? ...................................................................................................... 35\n6.1.2 Where is the breaking point when comparing the energy consumption\nefficiency between Bluetooth Classic and Bluetooth Low Energy, depending on\ntotal amount of data sent? .................................................................................... 36\n6.1.3 How can a circuit be built to accurately measure the required data to validate\nand verify the two earlier research questions? ..................................................... 36\n6.2 METHOD DISCUSSION .......................................................................................... 37"}),"\n",(0,i.jsx)(t.li,{children:"Conclusions and further research........................................... 38\n7.1 CONCLUSIONS ..................................................................................................... 38\n7.1.1 Implications................................................................................................. 38\n7.2 FURTHER RESEARCH............................................................................................ 38"}),"\n",(0,i.jsx)(t.li,{children:"References ................................................................................ 39"}),"\n",(0,i.jsx)(t.li,{children:"Appendix ................................................................................... 41\n6"}),"\n",(0,i.jsx)(t.li,{children:"Introduction\n1.1 Problem statement\nMost people use wireless technology every day. Wireless technology could for example\nbe a tv remote control or wireless headphones. Though both being wireless, they use\ndiverse types of communication technology. Remote controls most commonly use\ninfrared communication (Maker.io Staff, 2022) while wireless headsets use Bluetooth\nas a connector between the wireless object and the object to which it is connected to.\nThe focus in this thesis is Bluetooth technology, which is described more closely further\non.\nBluetooth is the leading technology in wireless data communication and the global\nstandard for simple and secure wireless connections (Bluetooth, 2022). Between\ndevices with Bluetooth technology, data can be transferred, for example music between\na phone and earbuds. Bluetooth can be found in most devices which supports pairing\nwith other devices.\nBluetooth\xb4s aim was to offer a general-purpose connectivity solution (Marcel, 2018).\nOver time, however, Bluetooth was primarily used for audio streaming. To return to the\noriginal idea of offering the general purpose of Bluetooth technology, Bluetooth Low\nEnergy (BLE) was developed after the first Bluetooth Classic or as it is called Basic\nRate / Enhanced Data Rate (BR/EDR). Whereas BR/EDR offers a higher data transfer\nspeed than BLE, it is more suitable for audio streaming and data transfers. BLE, that\ndoes not yet support audio streaming, supports data transfers, location services and\ndevice networks (Bluetooth, 2022). Since BLE offers device positioning it can track\npresence, distance, and direction to other devices. BLE also offers three types of\ncommunication, namely point-to-point, broadcast, and mesh.\nWith the Bluetooth 5.0 release, BLE got a bit rate speed upgrade to support 2Mb/s,\nwhich is only 1Mb/s slower compared to BR/EDR. This opened new possibilities for\nBLE and was later announced that audio streaming would become available. This\nmakes it directly compete with the advantage of BR/EDR that were the only Bluetooth\nvariant to support it. For small devices with a low battery capacity this could be a good\naddition to be able to save battery.\nEarlier studies have been done about the efficiency of BLE, for example (Buli\u0107, Kojek,\n& Biasizzo, 2019) concluded that the number of bytes sent was the variable that affected\nthe energy consumption. Their study was conducted by only measuring BLE efficiency\nand did not compare it to BR/EDR.\nAccording to (Bergelin & Ericsson, 2019) there might be a breaking point where BLE\nis less efficient than BR/EDR and thus, this study gives a better insight about the\nefficiency of BLE. This might also make the decision whether to change from BR/EDR\nto BLE for developers easier and better explain the difference for the customers. And\nwhen looking up energy consumption for BLE and BR/EDR in data sheets there is only\nshown the power consumption of one modulation for each technology and not\ncomparing the different modulations. Other studies have not researched in the area\nabout the breaking point and only about the efficiency of BLE or other similar\nalternatives such as Zigbee (Siekkinen, Hiienkari, K. Nurminen, & Nieminen, 2012).\n7\nDevelopers now a days has two different Bluetooth communication protocols to choose\nfrom. Companies, such as Knowit (Knowit, 2022), who work with Bluetooth modules\nfor automotives would like to know if and where this breaking point could be. The\nbreaking point is the point where BLE becomes less efficient than BR/EDR when it\ncomes to the energy consumption.\n1.2 Purpose and research questions\nThe purpose of this study is to find the breaking point where Bluetooth Classic becomes\nmore energy efficient than Bluetooth Low Energy when active. To achieve this, the data\nof the energy consumption efficiency between Bluetooth Classic and Bluetooth Low\nEnergy in relation to bit rate speed and total amount of data sent must be measured and\ncompared. To measure this data a circuit must be created with enough reliability to\nprovide data with low deviation.\nAccording to (Bergelin & Ericsson, 2019), there could be a breaking point where\nBluetooth Classic and Bluetooth Low Energy cross in their energy consumption\nefficiency. (Bergelin & Ericsson, 2019) did not research this area and therefore leads to\nthis study\u2019s first research question:"}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Where is the breaking point when comparing the energy consumption efficiency\nbetween Bluetooth Classic and Bluetooth Low Energy, depending on bit rate\nspeed?\nRelated to the first research question, if a breaking point exists when measuring\nefficiency on bit rate speed, then there must also be a breaking point when measuring\nefficiency related to the total amount of data sent between Bluetooth devices. Thus, this\nstudy\u2019s second research question is as followed:"}),"\n",(0,i.jsx)(t.li,{children:"Where is the breaking point when comparing the energy consumption efficiency\nbetween Bluetooth Classic and Bluetooth Low Energy, depending on total\namount of data sent?\nTo validate the two previous research questions, a circuit must be built. The circuit must\nbe precise and accurate to measure valid data with the least amount of disturbance from\nexternal sources. This leads to this study\u2019s third research question:"}),"\n",(0,i.jsx)(t.li,{children:"How can a circuit be built to accurately measure the required data to validate\nand verify the two earlier research questions?\n1.3 Scope and limitations\nSince this study is a continuation on another study\u2019s suggested research (Bergelin &\nEricsson, 2019), the experiments must be conducted in a comparable way. The\nexperiments made by Bergelin, and Ericsson (2019) were conducted with the use of an\nAndroid application supporting version 8.0 and newer.\nThis study does not use the previous study\u2019s developed Generic Attribute Profile\n(GATT), but instead use a Bluetooth stack provided by Knowit, called blueGO\n8\n(Knowit, 2022) The blueGO stack is built upon another Bluetooth stack made by\nOpensynergy, called Blue SDK, which uses their own developed GATT. The blueGO\nstack is only supported on a limited number of Bluetooth modules and thus the\nexperiments are limited to those specific modules.\nWhen measuring with the artifact, the base current is excluded from the energy\nconsumption used by the Bluetooth module to get more accurate results. The previous\nstudy also conducts experiments with external disturbance added, which this study does\nnot entail.\nAs this thesis work is conducted at Knowit a direction more towards automotive was\nchosen. This reflects the hardware chosen which the experiments were conducted with\nas the Jody-W263 is an automotive graded Bluetooth and Wi-Fi module. This is also\nthe reason why the BLE physical layer LE Coded PHY were not measured with in any\nexperiment. LE Coded PHY is a BLE modulation with a much better range for low\npower wireless communication technology. As this physical layer is mostly seen in use\ncases where greater range could be an advantage, the smart home sector is one example\nof it. The greater range is then something that is not of use when only connecting for\nexample a mobile phone or earphones that will always stay within a short range inside\nof an automotive.\n1.4 Disposition\nThis study is divided into six chapters, including this chapter of introduction. The\nchapter \u201cMethod and implementation\u201d describes how this study\u2019s process of data\ncollection and analysis is laid out. The next chapter, \u201cTechnical framework\u201d, explains\nthe fundamental knowledge that is needed to conduct similar experiments. The chapter\nafter is the \u201cResults\u201d chapter, where the empirical data is displayed and presented. The\nanalysed results and methods used in this study are discussed in the chapter \u201cAnalysis\u201d.\nThe next chapter is \u201cDiscussion\u201d where the analysed data and the methods used are\ndiscussed. The study is then concluded in the last chapter, \u201cConclusions and further\nresearch\u201d.\n9"}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsx)(t.li,{children:"Method and implementation\nFor this study, Design Science Research (DSR) (vom Brocke, Hevner, & Maedche,"}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"2020",children:["\n",(0,i.jsx)(t.li,{children:"is the best methodology to use when building something that must be reliable and\nprovide accurate results. DSR develops artifacts in many iterations in to get products\nthat meets specified requirements. Hence, by using this methodology when creating a\ncircuit, a reliable, accurate and complete circuit has been made and therefore, valid, and\nreliable data could be collected.\nFigure 1: Example of a DSR iteration\nTo answer this study\u2019s question 1 and 2 there will be a collection of empirical data from\nthe artifact created for this study. To then answer the questions a regression analysis\nwill be made to find the relations.\n2.1 Data collection\nThe purpose of this study can only be fulfilled by recording data and thus, empirical\nresearch is the method of choice to collect the data. The data was recorded in real-time\nusing the developed artifact. The data collected was the current going through the\nBluetooth modules chip. The data was collected by iterating through different bit rate\nspeeds and then within these speed settings iterate through various numbers of bytes\nsent.\n2.1.1 Design Science Research\nThis subchapter explains the different versions of the artifact that were developed by\nusing DSR.\n2.1.1.1 Hardware Artifact\nThe artifact was iterated and built around the Jody-W164 Bluetooth module, using\ndifferent hardware and software to find the most reliable and accurate artifact. The first\niteration of the artifact was a simple circuit consisting of a power supply, an ampere\nmeter, the Jody-W164 Bluetooth module, a resistor, and a laptop. The laptop was\nalways connected to the Bluetooth module to initialize and setup the Bluetooth module.\n10\nFigure 2: Circuit Diagram of first DSR Iteration.\nAs seen in Figure 2, the Bluetooth module, resistor, power supply and ampere meter\nare connected in series. The passive voltage probe from the oscilloscope was then\nconnected to the circuit across the resistor to read the voltage across said resistor. This\niteration provided readable data but having the ampere meter connected in series with\nthe rest of the circuit could add burden voltage, which can provide unreliable data if not\naccounted for. A USB cable connected to the Bluetooth module was needed for data\ncommunication.\nFigure 3: Circuit Diagram of second DSR Iteration.\n11\nThe next iteration, as displayed in Figure 3, is similar to the first iteration. The only\ndifference is the probe used. The second iteration of the circuit used a Current Probe,\nwhich instead of measuring directly on the circuit, it measures the magnetic field around\nthe wire it is clamped on to. The second iteration of the artifact provided similar data,\nbut it was difficult to read and evaluate as the data the current probe provided had a lot\nof noise.\nFigure 4: Circuit Diagram of third DSR Iteration.\nThe third iteration of the artifact used the Power Profiler Kit 2 (PPK2) manufactured\nby Nordic Semiconductor instead of a regular circuit. The PPK2 acts as a power source\nto the Bluetooth module and is also able to measure the current being used by the\nmodule. The PPK2 has software that is also made by Nordic Semiconductor, which\nlooks like a simplified oscilloscope. The software is needed to run the PPK2 properly\nand it gives a variety measurement such as average current used, and total electric\ncharge used. The software also displays the electric signal as a graph, just like a regular\noscilloscope. The PPK2 can supply 500mA and up to 1A, for 1A supply a second USB\ncable needs to be connected. For the configuration in Figure 4 with only one cable\nconnected to the Bluetooth module it was possible to both power it and read correct\nmeasurements.\n12\nFigure 5: Circuit Diagram of fourth DSR Iteration\nThe fourth iteration of the artifact were made to update the Bluetooth modules that both\nsupported the Bluetooth 5.0 core specification. The Bluetooth modules also had to\nsupport the optional feature of 2 Mb/s for BLE, the Bluetooth module chosen were a\nJody-W263 as seen in Figure 5 and the USB Bluetooth dongle changed to an Asus\nUSB-BT500. As the Bluetooth dongle does not connect to the hardware artifact it was\ndecided to not be part of the figure. Some changes had to be made with the hardware\nartifact as the Jody-W263 could not be supplied through the PPK2. By cutting open the\nUSB cable that will supply the Jody-W263, the PPK2 could be connected in serial to\nstill be able to measure the Bluetooth module. The PPK2 still had to be connected with\nanother USB cable to get power itself and data communication with the computer. To\nisolate current that is not from anything else other than the Bluetooth chip the jumper\nfor the LED\xb4s were removed and only having Bluetooth activated.\n13\n2.1.1.2 Software Artifact\nFigure 6: Flowchart diagram for software artifact.\nThe software side of the artifact were made up of Knowit\xb4s Bluetooth stack BlueGO.\nWith their help and knowledge, a software artifact was made that made it possible to\nsend bytes ranging from 0x00 to 0xFF. Both technologies (BLE and BR/EDR) were\nmade to be as closely implemented as possible. From Figure 6 a demonstration of how\nthe artifact work is shown. One thing to mention is that with BLE the last packet sent\nwere not the correct data but sent an uncontrolled data packet. After discussions and\nwith the time available for this thesis project it was not investigated further to try and\nfix this since there should not be any difference for the collected data. The correct\namount of data was sent, and all other packets had the correct data sent. This problem\nwas not met with BR/EDR. The software artifact was only implemented on the\ntransmitting Bluetooth module since the measured data was taken from the receiving\nBluetooth module it was not needed.\n2.1.2 Experiments\nExperiments to evaluate the artifacts were conducted with a Ublox Jody-W164 module\nthat supports Bluetooth 4.6 and a USB Bluetooth module with support of Bluetooth 4.0.\nThis was done due to the simple reason that it was the one available at the time and\nsimilar enough. For the artifact evaluating it was decided to only use Bluetooth Classic\nfor the purpose of not having to reinitialize the Bluetooth modules and set everything\nup again. For the testing of the artifacts three different amounts of bytes were used, 50k,\n500k and 1M bytes. The reason for only using three diffirent numbers of bytes were\n14\nonly because of the simplicity of testing the different artifacts. Later when doing the\nexperiments with the final iteration it was decided not to use 1M bytes but instead use\nlower amounts of bytes between 50k and 500k. The reason why 1M were not used in\nthe final experiments were because of the extreme amount of bytes and such amounts\nrarely appears in real life applications. This gave a better insight into the gap between\n50k and 500k and a fourth and fifth test were added. For the final experiments it was\ndecided to use 50k, 100k, 250k, 350k and 500k. The Ublox Jody-W164 functioned as\nthe receiver while the USB Bluetooth module functioned as a transmitter.\nTable 1: Table of average measured current through all iterations of the artifacts\nNumber of bytes sent 50k 500k 1M\nArtifact iteration 1\nAverage mA:\n12.9 12.5 10.6\nArtifact iteration 2\nAverage mA:\n11.4 11.3 11.1\nArtifact iteration 3\nAverage mA:\n12.42 12.09 12.35\nThe data collected for Table 1 can be seen under chapter Appendix from figure 24 to"}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"32",children:["\n",(0,i.jsx)(t.li,{children:"The data collection was also collected multiple times to ensure that the collected\ndata was reliable. Each amount of bytes sent were tested three times and then taken an\naverage of. This is done with the version 1 to 3 of the artifact, which is shown in the\ntable.\n2.2 Data analysis\nThe data analysis for this study was done by conducting experiments and further\nobserve the collected data. A correlation between the energy consumption and the bit\nrate speed of both Bluetooth technologies may be found by observing the collected data.\nAnd to further investigate if there is a relation between the number of bytes that get sent\nand its energy consumption. This data is then compared to other studies.\n2.3 Validity and reliability\nTo increase the validity and reliability of an academic thesis, it is important to measure\nrelevant data and make sure that the tests and experiments can be replicated correctly.\nTo increase the trustworthiness of this academic thesis, the data for each relevant\nparameter will be measured multiple times to ensure low deviation in the data.\nTo ensure validity the artifact created for the study are going through iterations of\nimprovements to ensure that correct and relevant data is measured. This is done through\nthe method DSR described earlier with aid from Knowit.\n15\nTo increase the reliability of the study everything is being described thoroughly to make\nsure the experiments can be remade. All the relevant flowcharts about the artifact and\nall its iterations are available from the study and easy to replicate. The components are\nmentioned from the study, and therefore the artifact will be able to be replicated with\nthe same hardware. The change of hardware chosen is described and what advantage it\ngave to the study. The blueGO stack is licensed and therefore not available for the\npublic to use unless you have a license for it. There should not be any difference when\nrecreating the data collection with an open-source Bluetooth stack. As blueGO is used\nacross many different industries, for example automotives and medical/health devices\nit should cover more or just as much as what other open-source Bluetooth stacks could\nhave.\n2.4 Considerations\nA consideration to take is that no experiments with artificially created disturbance were\nconducted in this study. The study tried to minimize the external disturbances as much\nas possible by measuring both Bluetooth types in the same environments with similar\nconditions. The experiments were also conducted multiple times to remove the risk of\ncorrupted data and to determine whether the data can be reproduced. It is not possible\nto eliminate all the external disturbances that could have possibly changed the outcome\nof the data.\n16"}),"\n",(0,i.jsx)(t.li,{children:"Technical framework\nThis chapter describes the fundamental knowledge that is needed to understand and\nfollow the experiments for this study and the knowledge needed to conduct similar\nexperiments.\n3.1 Bluetooth\nBluetooth is a wireless communication technology that uses short-range radio\ntransmissions. The technology is used to transfer data between fixed and mobile\ndevices. The data is transferred using Ultra High Frequency radio waves over the\nunlicensed Industrial, Scientific, and Medical (ISM) frequency band that can range\nfrom 2.4 to 2.48 GHz. Bluetooth can be split into two technologies, BR/EDR and BLE.\nBergelin and Ericsson (2019) mentions that there are two stacks which are mutually\nused in both technologies, they both use a host and a controller stack. The stacks are\nnot equally built because they involve different protocols to offer different solutions.\nFigure 7: Bluetooth stacks (Tosi, Taffoni, Santacatterina, Sannino, & Formica, 2017)\nThere are three different configurations to be made, see Figure 7. The three stacks are\none for BLE, BR/EDR and one for dual mode that supports both technologies. The\nstacks consist of three parts, host, host controller interface (HCI), and controller. The\nthird option of having a Bluetooth stack that supports both technologies is a\ncombination of all components from respective Bluetooth stacks.\n3.1.1 Host\nTo understand the different parts of the host in a bluetooth stack the parts for BR/EDR\nis explained first and BLE after.\nBR/EDR:\n17"}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"SDP:\nThe first component Service Discovery Protocol (SDP) is used by a client device to find\nthe services that it can use with the server device. The SDP server maintains a database\nwith services that an application can discover to see what is available and to determine\nthe characteristics of the available services."}),"\n",(0,i.jsx)(t.li,{children:"RFCOMM:\nThe Radio Frequency Communication (RFCOMM) protocol is an emulation of RS-232\nserial port communication between devices wirelessly."}),"\n",(0,i.jsx)(t.li,{children:"L2CAP:\nThe Logical Link and Control Adaptation Protocol (L2CAP) provides a connection-\noriented and connectionless data service to the upper layer protocols with protocol\nmultiplexing capability and segmentation and reassembly operations. It permits higher\nlevel protocols and applications to transmit and receive upper layer data packets with a\nsize of up to 64 kilobytes in length. L2CAP also permits per-channel flow control and\nretransmission. The L2CAP layer also provides logical channels, named L2CAP\nchannels, which are multiplexed over at least one or more logical links.\nBLE:"}),"\n",(0,i.jsx)(t.li,{children:"GAP:\nThe Generic Access Profile (GAP) has three main purposes:\nTo introduce definitions, recommendations and requirements related to modes and\naccess procedures that will be used by transport and application profiles.\nTo describe how devices should behave in standby and in connecting states to prevent\nsituations where links and channels cannot be established between Bluetooth devices\nor prevent multi-profile operations.\nTo express requirements for user interface aspects, mainly towards coding schemes and\nnames for procedures and parameters."}),"\n",(0,i.jsx)(t.li,{children:"GATT:\nThe GATT defines the service framework by using the Attribute protocol (ATT). It\ndefines all procedures and formats of services. The procedures defined are for example\nthe discovering, writing, reading, notifying, and indicating characteristics.\n18"}),"\n",(0,i.jsx)(t.li,{children:"ATT:\nATT allows the device referred to as the server to expose attributes and the associated\nvalues to the client. The attributes exposed by the server can be discovered, read, and\nwritten by the client and the server can respond, indicate, and notify to the client."}),"\n",(0,i.jsx)(t.li,{children:"SMP:\nThe Security Manager Protocol (SMP) is a protocol for the generating of encryption\nkeys and identity keys for peer-to-peer connections. This block also handles the storing\nof encryption keys and identity keys and are responsible for creating random addresses\nto know device identities. It will also provide the controller with stored keys during the\nencryption or pairing procedures."}),"\n",(0,i.jsx)(t.li,{children:"L2CAP\nThe LE stack also consists of L2CAP just as BR/EDR has in its stack too.\n3.1.2 Controller\nTo understand the different parts of the controller in a bluetooth stack the parts for\nBR/EDR is explained first and BLE after.\nBR/EDR:"}),"\n",(0,i.jsx)(t.li,{children:"LM:\nLink Manager (LM) is used to control and negotiate operations of Bluetooth\nconnections between two devices. This includes the set-up and control of logical\ntransports, logical links, and physical links. The LM communicates between two\ndevices Link Managers. All LM messages should only use physical links, associated\nlogical links and logical transports between the sending device and the receiving device."}),"\n",(0,i.jsx)(t.li,{children:"BR/EDR PHY:\nBR/EDR radio (physical layer) operates in the 2.4 GHz unlicensed ISM frequency band.\nTo avoid interference and fading it uses a frequency hopper. The frequency hopper is\ncalled Adaptive Frequency Hopping (AFH) and is something that both Bluetooth\ntechnologies uses. AFH works such as the Bluetooth channels gets divided into two\ncategories, used and unused. The used channels are a part of the hopping sequence and\nthe unused will be replacing the used in a hopping sequence in a pseudo-random order.\nAFH allows the Bluetooth device to use all its available channels, so for BR/EDR it can\nuse all the 79 channels available but not less than 20. BR/EDR channels range between\n2.400 GHz to 2.4835 GHz and all channels are spaced by 1 MHz. The formula to find\nall BR/EDR operating frequency bands:\n\ud835\udc53 = 2402 + \ud835\udc58 \ud835\udc40\ud835\udc3b\ud835\udc67, \ud835\udc58 = 0, \u2026 ,78\n19\nThere are two modes to define the radio, the non-optional mode called Basic Rate (BR)\nwhich uses a shaped, binary FM modulation. The second mode which is the optional is\ncalled Enhanced Data Rate (EDR). This mode uses PSK modulation and has two\nvariants: \u03c0/4-DQPSK and 8DPSK. The symbol rate for BR/EDR is 1 megasymbol per\nsecond. The bitrate speed for BR mode is:"}),"\n",(0,i.jsx)(t.li,{children:"1 Mb/s\nAnd the bitrate speed for the optional mode EDR active:"}),"\n",(0,i.jsx)(t.li,{children:"2 Mb/s"}),"\n",(0,i.jsx)(t.li,{children:"3 Mb/s\nThe different types of modulations have different package formats. From Figure 8 and\nFigure 9 the difference between a BR packet and EDR packet is shown.\nFigure 8: BR packet format\nThe different length of the contents of a BR packet: Access code: 68 or 72 bits. Header:\n54 bits. Payload: 0 to 2790 bits.\nFigure 9: EDR packet format\nThe different length of the contents of a EDR packet: Access code: 68 or 72 bits.\nHeader: 54 bits. Guard: is a defined time period between 4.75 to 5.25 \u03bcs. Sync: 20 to\n30 bits. EDR payload: 0 to 2790 bits. Trailer: 4 to 6 bits.\nBR/EDR as mentioned in Introduction only supports one type of communication\nTopology. BR/EDR supports Point-to-Point communication and are therefore only able\nto communicate with one device at a time.\nBLE:"}),"\n",(0,i.jsx)(t.li,{children:"LL:\nLink Layer (LL) consists of multiple states which it operates in:\n20\nFigure 10: State diagram of LL state machine (Bluetooth SIG, Inc., 2016)\nAccording to Bluetooth SIG, Inc. (2016) the states are defined as followed:\nStandby state, in this state the Bluetooth device does not transmit or receive any packets\nand can be entered from any state. From Figure 10 this state can be entered from any\nstate.\nAdvertising state, in this state the device will be transmitting advertising physical\nchannel packets and is able to listen to and responding to responses triggered by\nadvertising physical channel packets. From Figure 10 this state can only be entered\nfrom standby state.\nScanning state, in this state the device will be listening for advertising physical channel\npackets from devices who are advertising. From Figure 10 this state can be entered\nfrom standby state.\nInitiating state, in this state the device is only listening to advertising physical channel\npackets from a specific device and respond to these packets to initiate a connection with\nthat device. From Figure 10 this state can be entered from standby state.\nConnection state, in this state the device has a connection to another device. From\nFigure 10 this state can be entered from Advertising state or Initiating state."}),"\n",(0,i.jsx)(t.li,{children:"LE PHY:\nJust like BR/EDR, BLE also operates in the 2.4 GHz unlicensed ISM frequency band.\nBLE also uses the frequency-hopping spread spectrum called AFH to avoid interference\nand fading. BLE has a range between 2.400 GHz to 2.483.5 and 40 channels with a\nspacing of 2 MHz. The formula to find all BLE operating frequency bands:\n\ud835\udc53 = 2402 + 2\ud835\udc58 \ud835\udc40\u210e\ud835\udc67, \ud835\udc58 = 0, \u2026 , 39\n21\nBLE has two modulations defined, the first one is the mandatory LE 1M PHY with a\nsymbol rate of 1 Msym/s. The second optional modulation mode is LE 2M PHY with\na symbol rate of 2 Msym/s. The bitrate speed of LE 1M PHY is:"}),"\n",(0,i.jsx)(t.li,{children:"LE 1M PHY, uncoded data, 1 Mb/s"}),"\n",(0,i.jsx)(t.li,{children:"LE Coded PHY S=2, 500 kb/s"}),"\n",(0,i.jsx)(t.li,{children:"LE Coded PHY S=8, 125 kb/s\nAnd the bitrate speed of LE 2M PHY is:"}),"\n",(0,i.jsx)(t.li,{children:"LE 2M, uncoded data, 2 Mb/s\nA connection between BLE two devices differs from BR/EDR communication. BLE\nhave something called Connection Interval. A connection interval is a predefined time\nto which the host should send data packets with the client until the next packet should\nbe sent. The time which the host exchange data packets with the client is called a\nConnection Event. When the packets are exchanged and there still is time left of the\nConnection Interval, the radio goes idle. Figure 11 shows what a Connection Interval\nlooks like.\nFigure 11: Connection Interval BLE (Tosi, Taffoni, Santacatterina, Sannino, &\nFormica, 2017)\nThe different types of modulations have different package formats. From Figure 12\nand Figure 13 the difference between an uncoded and coded packet are shown.\nFigure 12: LL packet format LE Uncoded PHY\nThe different length of the contents of a LL packet: Preamble: 8 to 16 bits. Access\nAddress: 32 bits. PDU: 16 to 2056 bits. CRC: 24 bits.\nFigure 13: LL packet format LE Coded PHY (Bluetooth SIG, Inc., 2016)\n22\nThe different length of the contents of a LL coded packet: Preamble: Uncoded. Access\nAddress: 32 bits. CI: 3 bits. TERM1: 3 bits. PDU: 16 to 2056 bits. CRC: 24 bits.\nTERM2: 3 bits.\nAs mentioned before in the Introduction, BLE supports different types of connections.\nBLE supports different types of communication topologies, it supports Point-to-Point,\nBroadcast and Mesh (Bluetooth, 2022). Broadcasting makes the BLE device able to\nsend packages out to any scanning or receiving device that is in the range of the device.\nThis is the fastest way to send out packets to multiple peers at a time. GAP defines two\nroles in broadcasting, a broadcaster and observer. The observer continuously scans at\nperiodic intervals to see if there are any packets to receive from the broadcaster. The\nbroadcaster periodically sends out the packets to any device that can receive them. Mesh\nis another way for BLE to communicate with. In this communication the device acts as\nboth host and client simultaneously. Mesh is an extensive network of multiple devices\nwithout any connection but stays within the same network to communicate with each\nother. And Point-to-Point connection is where connections are established one-to-one\n(Bluetooth, 2022).\n3.1.3 Host Controller Interface\nThe Host Controller Interface manages the connection between the host and the\ncontroller of every Bluetooth device, it acts as an agent. The HCI provides a uniform\ncommand method for the Host to access Controller capabilities and to control\nconnections to other Controllers. The HCI stores all its commands sent and received\nand this data can be parsed by doing a so-called \u201cHCI dump\u201d.\n3.1.4 Bluetooth Serial Port Profile\nBluetooth Serial Port Profile (SPP) is a GAP protocol that is pre-defined within\nBR/EDR. SPP is a profile that is made to emulate physical serial ports such as RS232\nwith a virtual serial port through Bluetooth (Bluetooth, 2012).\n23\nFigure 14: Layers of SPP within GAP (Bluetooth, 2012)\nThe SPP protocol has several sub-protocols that depend on it as shown in Figure 14.\nFigure 15: Model of SPP (Bluetooth, 2012)\nThe RFCOMM layer within the model displayed by Figure 15 is the layer enabling the\nwireless communication by emulating a serial port. The point of this emulation is to\nenable transmitting and receiving data through wireless communication. The amount of\ndata transmitted can vary between a couple of bytes up to multiple large files.\n3.2 Electrical concepts\nTo accurately measure the current going through the Bluetooth module, several unique\nfactors must be considered. The biggest factors are explained in this sub-chapter and\nare as followed: Small Voltages, Burden Voltage, Shunt Resistors, and Brownout.\n24\n3.2.1 Small voltages\nTo measure electrical current or voltage, a Digital Multimeter (DMM) is very\ncommonly used as they are cheap and easy to set up and measure with. DMMs\ncommonly have resolutions of one millivolt, which means that the DMM can only\nmeasure changes at millivolt level. Thus, when measuring voltages lower than one\nmillivolt, a DMM is not a viable tool to measure the voltage.\nWhen measuring small voltages, great care needs to be taken, due to low resistances\nand thus too high current source can damage the electrical device. Other factors such as\nvarious noise sources or thermoelectric effects can cause errors or offsets when\nmeasuring the voltage (Daire, 2005). Daire (2005) mentions that thermoelectric effects\nare often the dominant source to voltage offsets when measuring the electrical device\nand suggests using a \u201cthree-point current reversal technique\u201d to minimize the thermally\ninduced voltage.\n3.2.2 Burden voltage\nBurden voltage is the loss of voltage when measuring current through a measuring\ndevice. This voltage drop can affect the circuit and thus show incorrect measurement\ndata. The circuit must be well thought out to minimize the amount of burden voltage\nthat may occur while measuring the Bluetooth module.\nThe effect of Burden Voltage can be calculated using Ohm\u2019s law:\n\ud835\udc3c = \ud835\udc49\n\ud835\udc45\nFigure 16: Circuit examples (NI, 2018)\nIn Figure 16, circuit (a) has a 1.5-volt source with a 5 ohm\u2019s load. Circuit (b) is similar\nbut with a 0.5-volt Burden Voltage due to the added DMM. By using the example\ncircuits, the effects of Burden Voltage can be calculated as such:\na) 1.5\ud835\udc49\n5\u03a9 = 0.3\ud835\udc34\nb) 1.5\ud835\udc49\u22120.5\ud835\udc49\n5\u03a9 = 0.2\ud835\udc34\nThese calculations prove how much a DMM can influence the current going through a\ncircuit and how this can effectively corrupt the data if not measured properly.\n3.2.3 Shunt resistors\nAccording to EEPower (u.d.), a shunt resistor is defined as followed: \u201cA shunt resistor\nis used to measure electric current, alternating or direct. This is done by measuring the\n25\nvoltage drop across the resistor.\u201d A shunt resistor is commonly used when the electric\ncurrent going through a circuit is too high for the ampere meter or DMM. By adding a\nshunt resistor to the circuit, the current is divided between the ammeter and shunt\nresistor and thus larger currents can be measured (EEPower, n.d.).\n3.2.4 Brownout\nBrownout is a term within electronics that is defined as: \u201can intentional or unintentional\ndrop in voltage in an electrical power supply system.\u201d This effect can last for minutes\nup to multiple hours and could potentially damage multiple electrical devices (CD &\nPower, n.d.). Different to a Blackout, where the electrical power supply system will\nshut down, current will still flow within the system during a brownout which can\npossibly cause damage if the brownout occurs spontaneously (Direct Energy, n.d.).\nAfter a brownout has occurred, a power surge is bound to happen, which is the biggest\nfactor to malfunctioning electronic devices.\n3.3 Why Bluetooth Low Energy is more energy efficient\nAs BLE\xb4s name suggest it is a more energy sufficient technology compared to BR/EDR.\nBut how does BLE manage to do it? The main difference between them is that BLE can\nhave the radio switched on for a short period of time (Donovan, 2011). When data is to\nbe sent connections can be established quickly and will be released as soon as the data\nhas been sent which will be minimizing the power consumption. BLE can scan for other\ndevices, connect, transmit data, confirm valid reception, and then terminate the link in\na period as little as 3ms. For BR/EDR this will typically require a period of over\nhundreds of milliseconds. As BLE only uses three advertising channels the scanning\nfor other devices will be done much quicker than BR/EDR that uses 32 channels. This\nresults in a scan period of only 0.6 to 1.2ms rather than BR/EDR that takes around\n22.5ms, this is also one way that BLE can consume less power. BLE also have the\nadvantage of using shorter packets, this can be seen in Figure 12 and Figure 13 for\nBLE, Figure 8 and Figure 9 for BR/EDR with the amount of bits sent described. The\nlast thing that helps BLE with its efficiency is by using Gaussian frequency shift keying\n(GFSK). Both BLE and BR/EDR uses GFSK, but the difference is that BR/EDR uses\na modulation index 0.35. Meanwhile the modulation for BLE is set somewhere between\n0.45 to 0.55 which is closer to the level for Gaussian minimum shift keying. This\nincrease of modulation results in lower power consumed but is more prone to inter-\nsymbol interference.\n26"}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"4",children:["\n",(0,i.jsx)(t.li,{children:"Results\nThis chapter presents and analyses the data that were collected during the conducted\nexperiments.\n4.1 Empirical data\nThe following tables present the collected data from the conducted experiments. The\ncolumns are divided into the total amount of data sent and the rows describe the time it\ntook to send the data, and the average electrical current used during that period. The\ntables also have a third row, which subtracts the average electrical current used during\nthe module\u2019s idle period from the average current used during the data sending. The\naverage idle for BR/EDR was 35.15 mA, and 33.67 mA for BLE in a connected state\nand not sending any data. When measuring the current idle the Bluetooth module were\nset as the host and in connected state with an interval of three seconds. The exact same\nsteps were taken for both Bluetooth technologies.\nThe three next tables are of collected data using Bluetooth Classic with its three\ndifferent speeds, 1 Mb/s, 2Mb/s, and 3Mb/s.\nTable 2: Collected data using BR/EDR with 1 Mb/s.\nIteration #1 50k 100k 250k 350k 500k\nTime (s) 3,855 7,705 19,25 26,94 38,49\nAverage (mA) 39,1 39,06 39,07 39,1 39,1\nIdle removed (mA) 3,95 3,91 3,92 3,95 3,95\nIteration #2 50k 100k 250k 350k 500k\nTime (s) 3,855 7,706 19,24 26,96 38,49\nAverage (mA) 39,12 39,08 39,08 39,09 39,07\nIdle removed (mA) 3,97 3,93 3,93 3,94 3,92\nIteration #3 50k 100k 250k 350k 500k\nTime (s) 3,857 7,704 19,25 26,97 38,53\nAverage (mA) 39,09 39,07 39,1 39,07 39,1\nIdle removed (mA) 3,94 3,92 3,95 3,92 3,95\nAverage Time 3,85566667 7,705 19,2466667 26,9566667 38,5033333\nAverage Effective 3,95333333 3,92 3,93333333 3,93666667 3,94\n27\nTable 3: Collected data using BR/EDR with 2 Mb/s.\nIteration #1 50k 100k 250k 350k 500k\nTime (s) 0,4916 1,031 2,555 3,587 5,133\nAverage (mA) 39,47 39,42 39,45 39,44 39,49\nIdle removed (mA) 4,32 4,27 4,3 4,29 4,34\nIteration #2 50k 100k 250k 350k 500k\nTime (s) 0,4931 1,035 2,611 3,558 5,102\nAverage (mA) 39,48 39,38 39,4 39,47 39,47\nIdle removed (mA) 4,33 4,23 4,25 4,32 4,32\nIteration #3 50k 100k 250k 350k 500k\nTime (s) 0,4952 1,022 2,574 3,549 5,083\nAverage (mA) 39,42 39,34 39,38 39,48 39,5\nIdle removed (mA) 4,27 4,19 4,23 4,33 4,35\nAverage Time 0,4933 1,02933333 2,58 3,56466667 5,106\nAverage Effective 4,30666667 4,23 4,26 4,31333333 4,33666667\nTable 4: Collected data using BR/EDR with 3 Mb/s.\nIteration #1 50k 100k 250k 350k 500k\nTime (s) 0,3686 0,759 1,911 2,706 3,847\nAverage (mA) 40,11 40,05 39,99 40,02 40,03\nIdle removed (mA) 4,96 4,9 4,84 4,87 4,88\nIteration #2 50k 100k 250k 350k 500k\nTime (s) 0,3762 0,7674 1,941 2,692 3,867\nAverage (mA) 40,02 39,95 39,98 40,02 40,03\nIdle removed (mA) 4,87 4,8 4,83 4,87 4,88\nIteration #3 50k 100k 250k 350k 500k\nTime (s) 0,3753 0,7486 1,908 2,726 3,875\nAverage (mA) 40,14 40,02 39,98 39,98 40,08\nIdle removed (mA) 4,99 4,87 4,83 4,83 4,93\nAverage Time 0,37336667 0,75833333 1,92 2,708 3,863\nAverage Effective 4,94 4,85666667 4,83333333 4,85666667 4,89666667\nThe two next tables are of collected data using Bluetooth Low Energy with its two\ndifferent speeds, 1 Mb/s and 2Mb/s.\n28\nTable 5: Collected data using BLE with LE 1M PHY.\nIteration #1 50k 100k 250k 350k 500k\nTime (s) 0,7631 1,21 4,027 5,385 7,681\nAverage (mA) 40,67 40,59 40,74 40,72 40,9\nIdle removed (mA) 7 6,92 7,07 7,05 7,23\nIteration #2 50k 100k 250k 350k 500k\nTime (s) 0,7686 1,687 3,731 5,401 7,594\nAverage (mA) 40,68 40,29 40,58 40,75 40,76\nIdle removed (mA) 7,01 6,62 6,91 7,08 7,09\nIteration #3 50k 100k 250k 350k 500k\nTime (s) 0,8004 1,539 3,846 5,419 7,769\nAverage (mA) 40,4 40,55 40,83 40,44 40,64\nIdle removed (mA) 6,73 6,88 7,16 6,77 6,97\nAverage Time 0,77736667 1,47866667 3,868 5,40166667 7,68133333\nAverage Effective 6,91333333 6,80666667 7,04666667 6,96666667 7,09666667\nTable 6: Collected data using BLE with LE 2M PHY.\n#1 50k 100k 250k 350k 500k\nTime (s) 0,3948 0,8281 2,177 2,683 4,228\nAverage (mA) 40,63 40,41 40,01 40,89 40,15\nIdle removed (mA) 6,96 6,74 6,34 7,22 6,48\n#2 50k 100k 250k 350k 500k\nTime (s) 0,5 0,9029 2,026 3,046 4,547\nAverage (mA) 39,19 39,72 40,43 39,97 39,67\nIdle removed (mA) 5,52 6,05 6,76 6,3 6\n#3 50k 100k 250k 350k 500k\nTime (s) 0,5373 0,753 1,977 2,753 4,178\nAverage (mA) 38,92 40,83 40,6 40,61 40,24\nIdle removed (mA) 5,25 7,16 6,93 6,94 6,57\nAverage Time 0,47736667 0,828 2,06 2,82733333 4,31766667\nAverage Effective 5,91 6,65 6,67666667 6,82 6,35\n29"}),"\n",(0,i.jsx)(t.li,{children:"Analysis\n5.1 Estimated throughput versus measured throughput\nWith the Bluetooth 5.0 release, BLE got a new mode which was advertised as being\nable to reach up to 2 Mb/s. This speed is only hypothetical and not possible to reach\npractically. The estimated throughput for BLE according to the Bluetooth SIG\u2019s\nmathematical formula is around 1.4 Mb/s when using the LE 2M PHY activated (Ren,\n2017). The estimated throughput for BR/EDR is 2.1 Mb/s when using the packet type\n3-DH5 (Donovan, 2011).\nThe result from this study shows that BR/EDR has a faster throughput than BLE when\nusing its 3 Mb/s modulation. The experiments showed that when using BR/EDR\u2019s 2\nMb/s, the practical throughput were on average 0.786 Mb/s. And while using its 3 Mb/s\nmodulation, the throughput were around 1.047 Mb/s. Meanwhile, when using BLE\u2019s\n1M PHY, the average throughput were around 0.522 Mb/s and 0.938 Mb/s when using\n2M PHY. The bit rate speed for the BR/EDR 1Mb/s mode were at an average of 0.104\nMb/s. Using these results, it shows that on average, the BR/EDR throughput speeds are\nfaster than the BLE throughput speeds.\nTable 7: Average measured throughput.\nTechnology BLE BR/EDR\nMode 1M PHY 2M PHY 1 Mb/s 2 Mb/s 3 Mb/s\nMeasured\nSpeed (Mb/s)\n0.5223 0.9383 0.1038 0.7864 1.0474\nThe energy consumption efficiency is calculated by multiplying the average measured\nelectrical current during the period the Bluetooth module is receiving data, times the\nnumber of seconds that period lasted. This will give the total coulomb units used during\nthat period.\n\u2201 = \ud835\udc34 \u2217 \ud835\udc60\nEquation 1: Calculation of coulomb\n5.2 Analysis of research questions\nThe purpose of analysing the collected data is to answer the study\u2019s research questions.\nTo analyse the data according to the research questions, experimentation and\nobservation and also comparison to other studies and datasheets must be made.\n5.2.1 Research question 1"}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Where is the breaking point when comparing the energy consumption efficiency\nbetween Bluetooth Classic and Bluetooth Low Energy, depending on bit rate\nspeed?\n30\n5.2.1.1 BLE\nFigure 17: BLE Total mC used\nWhen comparing the different bit rate speeds of BLE looking at Figure 17 a trend can\nbe seen where the LE 2M PHY modulation for BLE tends to show a lower consumed\namount of coulomb when receiving data. Furthermore, when looking at Table 5 and\nTable 6 the real difference is that LE 2M PHY has a lower average of mA drawn under\nreceiving compared to LE 1M PHY. The different modulation makes a difference then\nby making the faster bit rate speed having a lower average of power consumed and on\ntop of that a shorter period receiving data transmission.\n5.2.1.2 BR/EDR\nFigure 18: BR/EDR Total mC used\nWhen comparing the different bit rate speeds of BR/EDR looking at Figure 18 a trend\ncan also be seen where the least coulomb used tends to be the modulation with the\nhighest speed. Furthermore looking at Table 2, Table 3 and Table 4 a trend can be seen\n0\n10\n20\n30\n40\n50\n60\n50k 100k 250k 350k 500k\nmC\nBytes sent\nBLE 1Mb/s BLE 2Mb/s\n0\n20\n40\n60\n80\n100\n120\n140\n160\n50k 100k 250k 350k 500k\nmC\nBytes sent\nClassic 1Mb/s Classic 2Mb/s Classic 3Mb/s\n31\nwhere the modulations who support higher speeds will actually draw more average\neffective power. The speed will therefore be the factor that in this case makes the\ndifference as it does have a shorter period of time that the data has to be sent compared\nthe slower modulations.\n5.2.1.3 Compared\nWhen comparing the two Bluetooth technologies no breaking point can be found. For\nthe experiments conducted BLE tends to show a much higher average under receiving\ndata transmission. The modulation for BR/EDR with 1 Mb/s is the only BR/EDR that\nhas a higher power consumed, but when comparing its average effective mA used it has\nthe lowest of all the modulations.\n5.2.2 Research question 2"}),"\n",(0,i.jsx)(t.li,{children:"Where is the breaking point when comparing the energy consumption efficiency\nbetween Bluetooth Classic and Bluetooth Low Energy, depending on total\namount of data sent?\n5.2.2.1 BLE\nThe next two figures display the millicoloumb used per byte sent during BLE\ncommunication.\nFigure 19: BLE LE 1M PHY mC used per byte\n0,000096\n0,000098\n0,0001\n0,000102\n0,000104\n0,000106\n0,000108\n0,00011\n50000 100000 250000 350000 500000\nBytes sent\nmC used per byte\n32\nFigure 20: BLE LE 2M PHY mC used per byte\nWhen comparing the mC used per byte between the LE 1M PHY from Figure 19 and\nLE 2M PHY from Figure 20 for BLE no real pattern could be found. For BLE LE 1M\nPHY the collected data seems to be very varied with no real pattern. For BLE LE 2M\nPHY the collected data shows a higher mC used for 50k bytes sent. When sending more\ndata than 50k bytes a much more stable and lower mC used per byte. BLE LE 1M PHY\nhad an average of 0.10674 \u03bcC used per byte and LE 2M PHY had 0.05529 \u03bcC.\n5.2.2.2 BR/EDR\nThe next three figures display the mC used per byte sent during BR/EDR\ncommunication.\nFigure 21: BR/EDR 1 Mb/s mC used per byte\n0,000054\n0,0000545\n0,000055\n0,0000555\n0,000056\n0,0000565\n0,000057\n50000 100000 250000 350000 500000\nBytes sent\nmC used per byte\n0,0003005\n0,000301\n0,0003015\n0,000302\n0,0003025\n0,000303\n0,0003035\n0,000304\n0,0003045\n0,000305\n0,0003055\n50000 100000 250000 350000 500000\nBytes sent\nmC used per byte\n33\nFigure 22: BR/EDR 2 Mb/s mC used per byte\nFigure 23: BR/EDR 3 Mb/s used per byte\nWhen looking at the mC used per byte for BR/EDR 1 Mb/s from Figure 21, BR/EDR\n2 Mb/s from Figure 22 and BR/EDR 3 Mb/s from Figure 23 a pattern can be seen. The\naverage for 50k bytes will always be one of if not the highest. When bytes sent increase\nthe mC used per byte sent will also start to increase, this goes for all the different\nmodulations. BR/EDR 1 Mb/s had an average of 0.30486 \u03bcC used per byte, 2 Mb/s had\n0.04364 \u03bcC and 3 Mb/s had an average of 0.037249 \u03bcC.\n5.2.2.3 Compared\nWhen comparing the mC used per byte between BR/EDR and BLE, the first noticeable\ndifference is how BLE has no real pattern unlike BR/EDR, which clearly shows that\nwhen increasing the total amount of bytes sent, the mC per bytes sent also increases.\nWhereas the graphs for BLE look more random. BLE has a higher average energy\n0,0000415\n0,000042\n0,0000425\n0,000043\n0,0000435\n0,000044\n0,0000445\n50000 100000 250000 350000 500000\nmC used per byte\n0,0000362\n0,0000364\n0,0000366\n0,0000368\n0,000037\n0,0000372\n0,0000374\n0,0000376\n0,0000378\n0,000038\n50000 100000 250000 350000 500000\nmC used per byte\n34\nconsumption per byte than BR/EDR, which means that BR/EDR is in general more\nenergy efficient than BLE and thus no breaking point can be found.\n5.2.3 Research question 3"}),"\n",(0,i.jsx)(t.li,{children:"How can a circuit be built to accurately measure the required data to validate\nand verify the two earlier research questions?\nBy utilizing the DSR method and going through multiple stages of an artifact,\ndeveloping, and improving the artifact in many iterations, the data should become more\naccurate. Looking at the first artifact, displayed by Figure 2, it was a very simple circuit\nwith an oscilloscope connected to it to measure the electrical current passing through.\nAs shown in Figure 24, the data measured had a lot of noise and may be affected by\nburden voltage. Thus, the artifact needed improvements. The next artifact, described in\nFigure 3, was very similar to the first one, using a current probe instead of a regular\nvoltage probe. As seen in Figure 29, the results of this artifact were a lot of added noise\nto the data and the problem with burden voltage still exists. Figure 4 describes the third\niteration of the artifact, where instead of a circuit, the PPK2 is used to power the\nBluetooth module and read the electrical current used by it. The PPK2 were chosen\nbecause of its ability to read measurements all the way down to 200nA and up to 1A\n(Nordic semiconductor, u.d.). The software used for the PPK2 is shown in Figure 30,\nand the data is presented like a simulated oscilloscope. The data is easier to read than\nprevious iterations and the risk of burden voltage is eliminated. In the fourth iteration,\nthe Bluetooth module, Jody-W164, was replaced with the Jody-W263 module, to\nsupport the Bluetooth 5.0 technology and gain access to the newest BLE LE 2M PHY.\nThe set-up, as shown in Figure 5, was also different from the previous iteration, as the\ncomputer had to power the Bluetooth module and the PPK2 had to be serially connected\nwith the USB-cable to read the data.\n35"}),"\n"]}),"\n",(0,i.jsxs)(t.ol,{start:"6",children:["\n",(0,i.jsx)(t.li,{children:"Discussion\nThis chapter will discuss the methods used and the results of the experiments conducted\nby comparing them to previous studies.\n6.1 Result discussion\nThe thesis needed to answer three research questions to fulfil the purpose of the study.\n6.1.1 Where is the breaking point when comparing the energy consumption\nefficiency between Bluetooth Classic and Bluetooth Low Energy, depending on\nbit rate speed?\nLooking at the empirical data collected, and the analysis done, it is possible to see the\ndifference in energy consumption between the technologies. Even though the expected\nbit rate speeds for BR/EDR were not accomplished, the measured results of BR/EDR\nwere still better than the measured results of BLE. The results of BLE shows that BLE\nis in average much less energy efficient than BR/EDR. The average idle electrical\nconsumption with BLE is 33.67mA compared to 35.14mA with BR/EDR. Even with\nthis difference, BR/EDR is more energy efficient when receiving data. By looking at\nthe graphs, it is possible to see that there is no breaking point between the two\ntechnologies when comparing their energy consumption in correlation to the bit rate\nspeed. One reason that could have affected the result is the change of the connection\ninterval between sent packages. To speed up the throughput for BLE a connection\ninterval can be configured to send more packages within a smaller period. This means\nthat the module will almost constantly receive packets and have smaller intervals of\nidle. And thus, if having a longer connection interval, the average energy consumption\nwill decrease, but the total energy consumed will increase over time.\nLooking at the Bluetooth 5.0 core specifications the reason why BR/EDR 1 Mb/s\nreceived data so slow depended on the packets type sent. The data packet defaulted to\nDM1 which meant that the max rate would be 108.8 kb/s, even though we had DH5\nactivated that should give us a max rate of 433.9 kb/s. This means that if the right packet\nwould have been used it could of have had at least, in theory, one quarter of the time\nused for receiving the same length of packets. This would of have meant an even better\nenergy efficient could of have been measured. The BR/EDR 2 Mb/s had used the 2-\nDH5 packet with its speed of a max rate of 869.1 kb/s and had a respectable bit rate\nspeed achieved of 786.4 kb/s. The BR/EDR 3 Mb/s had also used the wrong data packet\ntype. BR/EDR 3 Mb/s had used the data packet type of 3-DH3 which meant a max rate\nof 1177.6 kb/s. If the data packet type would have been the correct one the packet type\nof 3-DH5 would of have been used. The speed for the 3-DH5 packet would have given\nus a max rate of 1306 kb/s. As our experiments gave us a speed of 1047.4 kb/s, a speed\nincrease of at least 100kb/s could have been possible which would have given us a\nslightly better effective energy consumption. This conclusion could be made after\nlooking at the user payload for each of the data packets and then comparing the speeds\nwhich matches the core specifications with only a small percent of bit rate speed\ndifference.\nComparing the two BLE modulations a faster speed does make it more energy efficient.\nWhen looking at the average mA drawn a clear advantage for LE 2M PHY is seen. With\n36\nLE 1M PHY having on average a 7.8% higher average mA drawn compared to LE 2M\nPHY and having a slower bit rate speed by 400 kb/s it stands no chance. The LE 2M\nPHY will therefore always have a shorter period when receiving the packets sent and\non top of that draw less on average mA.\nWhen looking at the research question with the empirical data collected and the\nanalysis, there was no breaking point that could be found. Thus, because BR/EDR is\nmore energy efficient at sending data with lower mA drawn on average and having\nhigher speeds achieved. When comparing BR/EDR 1 Mb/s to both speeds of BLE it\nalso draws less mA on average but falls short because of its low speed and must receive\ndata for a much longer period.\n6.1.2 Where is the breaking point when comparing the energy consumption\nefficiency between Bluetooth Classic and Bluetooth Low Energy, depending on\ntotal amount of data sent?\nFurther investigating the empirical data and analysis, it is possible to see a correlation\nbetween the total amount of data sent and the energy consumption through how much\nevery byte consumed. When sending more data with BR/EDR a slow increase could be\nseen while with BLE it did not show clear signs with LE 1M PHY to make any\ndifference. With BLE LE 2M PHY it showed a more stable but next to none changing\nmC used per byte. By looking at the charts Figure 19 to Figure 23 there is a clear\ndifference between how much mC BLE uses per byte compared to BR/EDR. BLE uses\nat an average more coulomb per byte than BR/EDR. BLE LE 1M PHY use 0.10674 \u03bcC\nat an average, and LE 2M PHY use 0.05529 \u03bcC, as compared to BR/EDR 1Mb/s, 2Mb/s\nand 3Mb/s use 0.30486 \u03bcC, 0.04364 \u03bcC and 0.03725 \u03bcC. By looking at this data it is\nvalid to say that no breaking points can be found because BLE were in general less\nenergy efficient than BR/EDR.\n6.1.3 How can a circuit be built to accurately measure the required data to\nvalidate and verify the two earlier research questions?\nThe requirement for the artifact was to have as little disturbance as possible to measure\nvalid data that would not be faulty in any way. By using the DSR method an artifact\nthat could be used to measure accurate data was created. The development of the artifact\nwas rather difficult as there were a lot of factors to think about to lower the risk of\ndisturbance and get accurate results. After four iterations we had the artifact needed to\nmeasure and collect our data. The last iteration was using the Jody-W263 Bluetooth\nmodule together with the PPK2 connected to a computer. This artifact had eliminated\nthe use of an actual circuit with measurements taken directly over the resistor, which\nremoves the risk of burden voltage and other risks such as temperature or noise that\nwould affect the data. Another study measuring the data transmission efficiency in BLE\n(Buli\u0107, Kojek, & Biasizzo, 2019) used the first version of the PPK for measurement of\ndata. As the PPK they used has a resolution of 200 nA we believe this can further\nincrease our measurements validity as the PPK2 has a resolution of 100nA.\n37\n6.2 Method discussion\nFor this study we decided to use experimentation and observation with help of DSR as\nour methods of choice to collect and analyse empirical data. We believe that this choice\nof method was the most relevant one as the purpose of this study was to find the\nbreaking point where the energy consumption of BLE becomes worse than BR/EDR.\nAnd to achieve this purpose, many iterations of both hardware and software had to be\ntested and investigated. The methods we used gave us the relevant data needed to\nanswer the research questions. By using the experimentation and observation method\nwe could gather real life data and observe the data to see any correlations between\nvariables which gave us relevant data. The DSR method then provided us with reliable\ndata that we then could trust for the experiments and after multiple iterations of artifatcts\na reliable circuit was made.\nBy conducting experiments with multiple iterations, a higher validity and reliability has\nbeen achieved. This is because more iterations with similar results will reduce the risk\nof corrupt data and instead prove that the data gathered is valid and no external or\ninternal sources have faulted the data. Although we did not achieve the expected bit rate\nspeed when measuring BR/EDR, we still believe that we conducted the experiments\ncorrectly since we used the correct modulations for BR/EDR and the results we got\nwould not have been very different if we reached expected throughput speeds. To make\nsure that the right modulations were used the HCI dumps had to be checked for both\nBLE and BR/EDR.\n38"}),"\n",(0,i.jsx)(t.li,{children:"Conclusions and further research\nThis chapter summarizes the study and presents implications and suggested further\nresearch.\n7.1 Conclusions\nThe purpose of this study was to research and investigate the potential existence of a\nbreaking point where BLE becomes less efficient than BR/EDR in terms of energy\nconsumption. The results from the conducted experiments show that BLE has overall\nworse energy consumption efficiency than BR/EDR and that there is no breaking point\nsince BLE is shown to be worse.\n7.1.1 Implications\nThe results from this study show the differences between BLE and BR/EDR and could\nhelp the industry, more specifically car manufacturers, decide whether to use BR/EDR\nor BLE as their Bluetooth technology in their cars.\n7.2 Further research\nDue to time limitations and other limitations mentioned in the chapter Scope and\nlimitations, further research exists.\nBecause we used a licensed Bluetooth stack that is not open for public use, similar\nexperiments but with an open-source stack would be interesting to analyse and verify\nthat there are no differences between a licensed Bluetooth stack and an open-source\nstack.\nThe Jody-W263 we used for our experiments is a Bluetooth module focused on\nautomotive use and thus may have different results than when using a more common\nBluetooth module, such as a phone which is more heavily focused on small power\nconsumption. Thus, a relevant extension to this study would be to test multiple different\nBluetooth modules to see if there may be any differences.\n39"}),"\n",(0,i.jsxs)(t.li,{children:["References\nBergelin, J., & Ericsson, F. (2019). Data\xf6verf\xf6ring med Bluetooth 5. J\xf6nk\xf6ping: diva-\nportal.\nBluetooth. (2012, July 24). Serial Port Porfile 1.2. Retrieved from Bluetooth:\n",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/specifications/specs/serial-port-profile",children:"https://www.bluetooth.com/specifications/specs/serial-port-profile"}),"\nBluetooth. (2022, March 16). Bluetooth. Retrieved from Bluetooth\xae technology media\ninformation: bluetooth.com/media/\nBluetooth. (2022, 04 19). Bluetooth Technology Overview. Retrieved from Bluetooth:\n",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/learn-about-bluetooth/tech-overview/",children:"https://www.bluetooth.com/learn-about-bluetooth/tech-overview/"}),"\nBluetooth. (2022, April 19). Topology Options. Retrieved from Bluetooth:\n",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/learn-about-bluetooth/topology-options/",children:"https://www.bluetooth.com/learn-about-bluetooth/topology-options/"}),"\nBluetooth SIG, Inc. (2016, 12 06). bluetooth. Retrieved from Core Specification 5.0 -\nBluetooth\xae Technology Website:\n",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/specifications/specs/core-specification-5/",children:"https://www.bluetooth.com/specifications/specs/core-specification-5/"}),"\nBuli\u0107, P., Kojek, G., & Biasizzo, A. (2019). Data Transmission Efficiency in Bluetooth\nLow Energy Versions. Ljubljana: Sensors.\ndoi:",(0,i.jsx)(t.a,{href:"https://doi.org/10.3390/s19173746",children:"https://doi.org/10.3390/s19173746"}),"\nCD & Power. (n.d.). gotpower. Retrieved from Brownouts vs. Blackouts. What's the\ndifference?: ",(0,i.jsx)(t.a,{href:"https://www.gotpower.com/brownouts-and-blackouts/",children:"https://www.gotpower.com/brownouts-and-blackouts/"}),"\nDaire, A. (2005). Low-Voltage Measurement Techniques. Cleveland: Keithley\nInstruments, Inc.\nDirect Energy. (n.d.). directenergy. Retrieved from What's the Difference Between a\nBlackout and a Brownout? | Direct Energy:\n",(0,i.jsx)(t.a,{href:"https://www.directenergy.com/learning-center/difference-between-blackout-",children:"https://www.directenergy.com/learning-center/difference-between-blackout-"}),"\nbrownout\nDonovan, J. (den 01 December 2011). Bluetooth Goes Ultra-Low-Power. H\xe4mtat fr\xe5n\nDigikey: ",(0,i.jsx)(t.a,{href:"https://www.digikey.com/en/articles/bluetooth-goes-ultra-low-power",children:"https://www.digikey.com/en/articles/bluetooth-goes-ultra-low-power"}),"\nEEPower. (n.d.). EEPower. Retrieved from Shunt Resistor | Resistor Applications |\nResistor Guides: ",(0,i.jsx)(t.a,{href:"https://eepower.com/resistor-guide/resistor-",children:"https://eepower.com/resistor-guide/resistor-"}),"\napplications/shunt-resistor/#\nKnowit. (2022, March 21). About us. Retrieved from Knowit:\n",(0,i.jsx)(t.a,{href:"https://www.knowit.eu/about-knowit/",children:"https://www.knowit.eu/about-knowit/"}),"\nKnowit. (2022, March 20). blueGO. Retrieved from Knowit:\n",(0,i.jsx)(t.a,{href:"https://www.knowit.eu/services/connectivity/product-service-",children:"https://www.knowit.eu/services/connectivity/product-service-"}),"\ndevelopment/bluego/\nMaker.io Staff. (2022, March 20). Digikey. Retrieved from Understanding the Basics\nof Infrared Communications:\n",(0,i.jsx)(t.a,{href:"https://www.digikey.com/en/maker/blogs/2021/understanding-the-basics-of-",children:"https://www.digikey.com/en/maker/blogs/2021/understanding-the-basics-of-"}),"\ninfrared-communications\n40\nMarcel, J. (2018, June 20). How the Bluetooth Community Revolutionized Data\nTransfer. Retrieved from Bluetooth: ",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/blog/how-",children:"https://www.bluetooth.com/blog/how-"}),"\nbluetooth-revolutionized-data-transfer/\nNI. (2018). Burden Voltage. Retrieved from NI: ",(0,i.jsx)(t.a,{href:"https://zone.ni.com/reference/en-",children:"https://zone.ni.com/reference/en-"}),"\nXX/help/370384V-01/dmm/burden_voltage/\nNordic semiconductor. (u.d.). Power Profiler Kit II . H\xe4mtat fr\xe5n Nordicsemi:\n",(0,i.jsx)(t.a,{href:"https://www.nordicsemi.com/Products/Development-hardware/Power-",children:"https://www.nordicsemi.com/Products/Development-hardware/Power-"}),"\nProfiler-Kit-2\nRen, K. (2017, February 20). Higher Speed How Fast Can It Be? Retrieved from\nBluetooth: ",(0,i.jsx)(t.a,{href:"https://www.bluetooth.com/blog/exploring-bluetooth-5-how-fast-",children:"https://www.bluetooth.com/blog/exploring-bluetooth-5-how-fast-"}),"\ncan-it-be/\nSiekkinen, M., Hiienkari, M., K. Nurminen, J., & Nieminen, J. (2012). How low energy\nis bluetooth low energy? Comparative measurements with ZigBee/802.15.4.\n2012 IEEE Wireless Communications and Networking Conference Workshops\n(WCNCW), 232-237. doi:10.1109/WCNCW.2012.6215496\nTosi, J., Taffoni, F., Santacatterina, M., Sannino, R., & Formica, D. (2017).\nPerformance Evaluation of Bluetooth Low Energy: A Systematic Review. Basel,\nSwitzerland: Sensors. doi:",(0,i.jsx)(t.a,{href:"https://doi.org/10.3390/s17122898",children:"https://doi.org/10.3390/s17122898"}),"\nvom Brocke, J., Hevner, A., & Maedche, A. (2020). Introduction to Design Science\nResearch. SpringerNature.\n41"]}),"\n",(0,i.jsx)(t.li,{children:"Appendix\nFigure 24: Probe 50k bytes sent.\nFigure 25: Probe 500k bytes sent.\n42\nFigure 26: Probe 1M bytes sent.\nFigure 27: Current probe 50k bytes sent.\n43\nFigure 28: Current probe 500k bytes sent.\nFigure 29: Current probe 1M bytes sent.\n44\nFigure 30: PPK2 50k bytes sent.\nFigure 31: PPK2 500k bytes sent.\nFigure 32: PPK2 1M bytes sent."}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h1,{id:"httpsacademynordicsemicomcoursesbluetooth-low-energy-fundamentals",children:(0,i.jsx)(t.a,{href:"https://academy.nordicsemi.com/courses/bluetooth-low-energy-fundamentals/",children:"https://academy.nordicsemi.com/courses/bluetooth-low-energy-fundamentals/"})}),"\n",(0,i.jsx)(t.p,{children:"Skip to content"}),"\n",(0,i.jsx)(t.p,{children:"Register\nLog in"}),"\n",(0,i.jsx)(t.p,{children:"Bluetooth Low Energy\nBluetooth Low Energy Fundamentals\n9.1/10 (2390)\n7904already enrolled\nCourse description"}),"\n",(0,i.jsx)(t.p,{children:"The Bluetooth Low Energy Fundamentals course is an online, self-paced course that focuses on teaching the basics of Bluetooth LE using Nordic Semiconductor devices (nRF54, nRF53, and nRF52 Series). Through hands-on learning, participants will learn how to create a Bluetooth LE prototype and establish a wireless, unidirectional and bidirectional data channel between two Bluetooth LE devices in a short period of time."}),"\n",(0,i.jsx)(t.p,{children:"Upon completion of the course, participants will have a thorough understanding of the Bluetooth LE protocol and its layers, as well as knowledge of available APIs in the nRF Connect SDK, which is based on the Zephyr RTOS. Additionally, participants will have gained practical experience in configuring Bluetooth LE advertisements and connections, as well as insight into securing Bluetooth LE connections and inspecting packets over the air using nRF Sniffer"}),"\n",(0,i.jsx)(t.p,{children:"What you'll learn"}),"\n",(0,i.jsx)(t.p,{children:"Develop a solid comprehension of the most up-to-date Bluetooth LE application architecture.\nAcquire knowledge of Bluetooth LE advertising and its functionalities.\nLearn about Bluetooth LE connections and how to exchange data over Bluetooth LE.\nGain insights on how to secure Bluetooth LE connections.\nFamiliarize yourself with the Bluetooth LE APIs in the nRF Connect SDK.\nLearn about tools (nRF Connect for Mobile, nRF Sniffer) for debugging Bluetooth LE applications.\nApply your learning through hands-on exercises to establish unidirectional and bidirectional data channel between two Bluetooth LE-enabled devices."}),"\n",(0,i.jsx)(t.p,{children:"Who should enroll in this course?"}),"\n",(0,i.jsx)(t.p,{children:"You should enroll to this course if you are interested in learning about the Bluetooth LE protocol and want to build a Bluetooth LE prototype using Nordic Semiconductor\u2019s products. The course is aimed to embedded software engineers, firmware developers, or anyone interested in microcontrollers and embedded systems.\nEstimated time\nAn estimate of about eight to ten hours in total is needed to finish this course. The actual time needed to finish the course will highly depend on your technical background and experience.\nLearning Objectives\nExamine the Bluetooth LE protocol and understand the role of its different layers\nMaster Bluetooth LE advertising\nLearn about Bluetooth LE connections\nExamine the available options for data exchange in Bluetooth LE\nGain insights on how to secure Bluetooth LE connections\nExamine Bluetooth LE packets over the air\nStart course\nDetails\nFundamental level\n6 lessons\n8-10 hours to complete\nCertificate of completion\nPrerequisites"}),"\n",(0,i.jsx)(t.p,{children:"Basic knowledge in the C programming language.\nSome experience in developing software for embedded systems.\nnRF Connect SDK Fundamentals course\n(Required) Lesson 1\n(Recommended) Lesson 2 \u2013 Lesson 8"}),"\n",(0,i.jsx)(t.p,{children:"Hardware Requirements"}),"\n",(0,i.jsx)(t.p,{children:"Any of the following development kits: nRF54LM20 DK, nRF54L15 DK, nRF5340 DK, nRF52840 DK, nRF52833 DK, nRF52 DK\nA smartphone or a tablet (Android 4.3 or later and iOS version 16.0 or later)\nSpecial hardware requirements for Lesson 6"}),"\n",(0,i.jsx)(t.p,{children:"System Requirements"}),"\n",(0,i.jsx)(t.p,{children:"A computer running Windows, macOS, or Linux\nAn up-to-date web browser"}),"\n",(0,i.jsx)(t.p,{children:"Software Requirements\u200b"}),"\n",(0,i.jsx)(t.p,{children:"nRF Connect for Desktop\nnRF Command Line Tools\nVisual Studio Code\nnRF Connect for Mobile"}),"\n",(0,i.jsx)(t.p,{children:"Supported SDK versions"}),"\n",(0,i.jsx)(t.p,{children:"nRF Connect SDK v3.1.1 \u2013 v2.3.0\nnRF Connect SDK v3.1.1 or higher is needed for the nRF54LM20 DK\nnRF Connect SDK v2.8.0 or higher is needed for the nRF54L15 DK"}),"\n",(0,i.jsx)(t.p,{children:"Course Content\nExpand All\nLesson 1 \u2013  Bluetooth LE Introduction\n5 Topics | 1 Quiz\nWhat is Bluetooth LE?\nGAP: Device roles and topologies\nATT & GATT: Data representation and exchange\nPHY: Radio modes\nExercise 1\nLesson 1 quiz\nLesson 2 \u2013 Bluetooth LE Advertising\n7 Topics | 1 Quiz\nAdvertising process\nAdvertising types\nBluetooth address\nAdvertisement packet\nExercise 1\nExercise 2\nExercise 3\nLesson 2 quiz\nLesson 3 \u2013 Bluetooth LE Connections\n4 Topics | 1 Quiz\nConnection process\nConnection parameters\nExercise 1\nExercise 2\nLesson 3 quiz\nLesson 4 \u2013 Data exchange in Bluetooth LE\n6 Topics | 1 Quiz\nGATT operations\nServices and characteristics\nAttribute table\nExercise 1\nExercise 2\nExercise 3\nLesson 4 quiz\nLesson 5 \u2013 Security in Bluetooth LE communication\n5 Topics | 1 Quiz\nPairing process\nLegacy pairing vs LE Secure Connections\nSecurity modes\nExercise 1\nExercise 2\nLesson 5 quiz\nLesson 6 \u2013 Bluetooth LE sniffer\n5 Topics | 1 Quiz\nSniffing Bluetooth LE packets\nSetting up nRF Sniffer for Bluetooth LE\nExercise 1\nExercise 2\nExercise 3\nLesson 6 quiz\nGet your Certificate!\nNordicsemi.com\nNordicsemi.cn\nNordicsemi.jp\nTechDocs\nDevAcademy\nDevZone\nTechWebinars\nContact Us\nPrivacy Policy\nTerms of Service\nSitemap\nCopyright \xa9 2025 Nordic Semiconductor. All rights reserved"})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);