"use strict";(globalThis.webpackChunkknife_preview=globalThis.webpackChunkknife_preview||[]).push([[3292],{4043:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"sk/index","title":"USBCAPS","description":"---","source":"@site/docs/sk/index.md","sourceDirName":"sk","slug":"/sk/","permalink":"/en/sk/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","next":{"title":"Project Outcomes","permalink":"/en/sk/knifes/ K000003-Project-Outcomes/project-outcomes"}}');var r=i(4848),a=i(8453);const t={},l="USBCAPS",s={},d=[{value:"1. Abstrakt",id:"1-abstrakt",level:2},{value:"2. K\u013e\xfa\u010dov\xe9 Funkcie a Ciele",id:"2-k\u013e\xfa\u010dov\xe9-funkcie-a-ciele",level:2},{value:"3. N\xe1vrh Hardv\xe9ru",id:"3-n\xe1vrh-hardv\xe9ru",level:2},{value:"Po\u017eadovan\xe9 Komponenty:",id:"po\u017eadovan\xe9-komponenty",level:3},{value:"Blokov\xe1 Sch\xe9ma Zapojenia:",id:"blokov\xe1-sch\xe9ma-zapojenia",level:3},{value:"4. N\xe1vrh Softv\xe9ru (Firmware pre ESP32)",id:"4-n\xe1vrh-softv\xe9ru-firmware-pre-esp32",level:2},{value:"Modul 1: Automatick\xe1 Detekcia Baud Rate",id:"modul-1-automatick\xe1-detekcia-baud-rate",level:3},{value:"Modul 2: Automatick\xe1 Detekcia Pinov (RX/TX Swap)",id:"modul-2-automatick\xe1-detekcia-pinov-rxtx-swap",level:3},{value:"Modul 3: Bezdr\xf4tov\xfd Most",id:"modul-3-bezdr\xf4tov\xfd-most",level:3},{value:"5. Postup Realiz\xe1cie",id:"5-postup-realiz\xe1cie",level:2},{value:"6. Mo\u017en\xe9 Vylep\u0161enia",id:"6-mo\u017en\xe9-vylep\u0161enia",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"usbcaps",children:"USBCAPS"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"team-members",children:"Team Members"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Denis Ivan"}),": IoT Engineer, Creator of the idea"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ondrej \u0160p\xe1nik"}),": KNIFE Framework Developer, Social Media Manager, IoT Engineer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Danilo Bashmakov"}),": IoT Engineer"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"n\xe1vrh-projektu-usb-ttl-prevodn\xedk-s-automatickou-detekciou-a-bezdr\xf4tov\xfdm-termin\xe1lom",children:"N\xe1vrh Projektu: USB-TTL Prevodn\xedk s Automatickou Detekciou a Bezdr\xf4tov\xfdm Termin\xe1lom"}),"\n",(0,r.jsx)(n.h2,{id:"1-abstrakt",children:"1. Abstrakt"}),"\n",(0,r.jsx)(n.p,{children:"Cie\u013eom tohto projektu je navrhn\xfa\u0165 a zostroji\u0165 pokro\u010dil\xfd USB-TTL s\xe9riov\xfd prevodn\xedk, ktor\xfd zjednodu\u0161\xed pr\xe1cu v\xfdvoj\xe1rom a hobby elektronikom. Zariadenie bude okrem \u0161tandardnej funkcie prevodn\xedka obsahova\u0165 inteligentn\xe9 funkcie, ako je automatick\xe1 detekcia prenosovej r\xfdchlosti (baud rate) a automatick\xe9 prehodenie pinov RX/TX. Navy\u0161e bude integrova\u0165 bezdr\xf4tov\xfa konektivitu (Wi-Fi alebo Bluetooth), \u010do umo\u017en\xed pou\u017e\xedva\u0165 ho ako bezdr\xf4tov\xfd s\xe9riov\xfd termin\xe1l prostredn\xedctvom webovej aplik\xe1cie alebo mobilnej aplik\xe1cie."}),"\n",(0,r.jsx)(n.h2,{id:"2-k\u013e\xfa\u010dov\xe9-funkcie-a-ciele",children:"2. K\u013e\xfa\u010dov\xe9 Funkcie a Ciele"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u0160tandardn\xfd USB-TTL Prevodn\xedk"}),": Poskytnutie stabilnej s\xe9riovej komunik\xe1cie medzi PC (USB) a mikrokontrol\xe9rmi/zariadeniami (TTL UART)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatick\xe1 Detekcia Baud Rate"}),": Zariadenie samostatne identifikuje spr\xe1vnu prenosov\xfa r\xfdchlos\u0165 komunikuj\xfaceho zariadenia (napr. 9600, 115200, at\u010f.), \u010d\xedm eliminuje potrebu manu\xe1lneho nastavovania."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatick\xe1 Detekcia Poz\xedcie Pinov (RX/TX Swap)"}),": Prevodn\xedk automaticky zist\xed, \u010di s\xfa piny RX a TX prekr\xed\u017een\xe9, a prisp\xf4sob\xed sa tomu. T\xfdm sa predch\xe1dza \u010dast\xfdm probl\xe9mom s pripojen\xedm."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Du\xe1lna Nap\xe1jacia \xdarove\u0148"}),": Poskytnutie v\xfdstupn\xe9ho nap\xe4tia 3.3V aj 5V pre nap\xe1janie pripojen\xfdch zariaden\xed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bezdr\xf4tov\xfd Termin\xe1l"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wi-Fi Verzia (s ESP8266/ESP32): Zariadenie vytvor\xed webov\xfd server s termin\xe1lovou aplik\xe1ciou pr\xedstupnou cez prehliada\u010d."}),"\n",(0,r.jsx)(n.li,{children:'Bluetooth Verzia (s ESP32): Zariadenie bude fungova\u0165 ako Bluetooth "Serial Port Profile" (SPP) zariadenie, ku ktor\xe9mu sa d\xe1 pripoji\u0165 z mobilu alebo PC.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-n\xe1vrh-hardv\xe9ru",children:"3. N\xe1vrh Hardv\xe9ru"}),"\n",(0,r.jsx)(n.h3,{id:"po\u017eadovan\xe9-komponenty",children:"Po\u017eadovan\xe9 Komponenty:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mikrokontrol\xe9r"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Odpor\xfa\u010dan\xe9: ESP32-WROOM-32. Tento \u010dip je ide\xe1lny, preto\u017ee obsahuje Wi-Fi, Bluetooth, dva UART porty (jeden pre komunik\xe1ciu s PC, druh\xfd pre cie\u013eov\xe9 zariadenie) a dostato\u010dn\xfd v\xfdpo\u010dtov\xfd v\xfdkon."}),"\n",(0,r.jsx)(n.li,{children:"Alternat\xedva (len Wi-Fi): NodeMCU (ESP8266). Je lacnej\u0161\xed, ale m\xe1 menej GPIO pinov a ch\xfdba mu Bluetooth."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"USB-to-UART Bridge"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CP2102 alebo CH340G/C. Tento \u010dip bude sl\xfa\u017ei\u0165 ako most medzi USB portom po\u010d\xedta\u010da a jedn\xfdm z UART portov na ESP32."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regul\xe1tor Nap\xe4tia"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"AMS1117-3.3 alebo podobn\xfd LDO regul\xe1tor na vytvorenie stabiln\xe9ho 3.3V nap\xe1jania z 5V USB."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logick\xfd Meni\u010d \xdarovn\xed (Logic Level Shifter)"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Volite\u013en\xfd, ale odpor\xfa\u010dan\xfd pre bezpe\u010dn\xfa komunik\xe1ciu s 5V zariadeniami, ak ESP be\u017e\xed na 3.3V logike. Modul s BSS138 tranzistormi je be\u017en\xe1 vo\u013eba."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pas\xedvne Komponenty"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Konektory (USB-C alebo Micro USB, pinov\xe9 li\u0161ty)."}),"\n",(0,r.jsx)(n.li,{children:"Rezistory, kondenz\xe1tory, LED di\xf3dy na indik\xe1ciu stavu (nap\xe1janie, RX, TX)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"blokov\xe1-sch\xe9ma-zapojenia",children:"Blokov\xe1 Sch\xe9ma Zapojenia:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+-------------------+ +-----------------+ +---------------------+\nPC (USB) &lt;=&rt;| USB-to-UART \u010dip | UART1&lt;=&rt;| ESP32 | UART2&lt;=&rt;| Cie\u013eov\xe9 Zariadenie |\n| (CP2102/CH340) | | | | (Arduino, senzor...) |\n+-------------------+ +-------+---------+ +---------------------+\n|\n+--+---+--+\n| Wi-Fi / |\n| Bluetooth|\n+----------+\n"})}),"\n",(0,r.jsx)(n.h2,{id:"4-n\xe1vrh-softv\xe9ru-firmware-pre-esp32",children:"4. N\xe1vrh Softv\xe9ru (Firmware pre ESP32)"}),"\n",(0,r.jsx)(n.p,{children:"Firmware bude nap\xedsan\xfd v C++ s pou\u017eit\xedm Arduino Framework alebo ESP-IDF."}),"\n",(0,r.jsx)(n.h3,{id:"modul-1-automatick\xe1-detekcia-baud-rate",children:"Modul 1: Automatick\xe1 Detekcia Baud Rate"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"ESP32 bude cyklicky prep\xedna\u0165 svoj druh\xfd UART port (UART2) medzi zoznamom \u0161tandardn\xfdch prenosov\xfdch r\xfdchlost\xed (300, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200)."}),"\n",(0,r.jsx)(n.li,{children:"Na ka\u017edej r\xfdchlosti bude kr\xe1tky \u010das po\u010d\xfava\u0165 prich\xe1dzaj\xface d\xe1ta."}),"\n",(0,r.jsx)(n.li,{children:"Primit\xedvna met\xf3da: Ak prijme ak\xe9ko\u013evek d\xe1ta bez chyby r\xe1mca (framing error), predpoklad\xe1, \u017ee r\xfdchlos\u0165 je spr\xe1vna a uzamkne ju."}),"\n",(0,r.jsx)(n.li,{children:'Pokro\u010dil\xe1 met\xf3da: Bude \u010daka\u0165 na \u0161pecifick\xfd znak, napr\xedklad 0x0A (Newline) alebo 0x55 (bin\xe1rne striedanie bitov), ktor\xfd sa \u010dasto posiela pri \u0161tarte alebo v "idle" stave. Po \xfaspe\u0161nej detekcii sa r\xfdchlos\u0165 uzamkne.'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modul-2-automatick\xe1-detekcia-pinov-rxtx-swap",children:"Modul 2: Automatick\xe1 Detekcia Pinov (RX/TX Swap)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'Po \xfaspe\u0161nej detekcii baud rate sa ESP32 pok\xfasi posla\u0165 testovac\xed pr\xedkaz na cie\u013eov\xe9 zariadenie (napr. "AT\\r\\n", ak ide o modem, alebo len \u010dak\xe1 na d\xe1ta).'}),"\n",(0,r.jsx)(n.li,{children:"Scen\xe1r A (predvolen\xe9 zapojenie): ESP32 TX -> Cie\u013eov\xfd RX, ESP32 RX -> Cie\u013eov\xfd TX."}),"\n",(0,r.jsx)(n.li,{children:"Ak ESP32 prijme o\u010dak\xe1van\xfa odpove\u010f alebo ak\xe9ko\u013evek platn\xe9 d\xe1ta na svojom RX pine, konfigur\xe1cia je spr\xe1vna."}),"\n",(0,r.jsx)(n.li,{children:"Ak po kr\xe1tkom \u010dasovom limite (napr. 500ms) nepr\xedde \u017eiadna odpove\u010f, firmv\xe9r programovo prehod\xed funkciu svojich pinov (pomocou gpio_matrix_out a gpio_matrix_in v ESP-IDF alebo softv\xe9rovou emul\xe1ciou) a zopakuje test."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"modul-3-bezdr\xf4tov\xfd-most",children:"Modul 3: Bezdr\xf4tov\xfd Most"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pre Wi-Fi:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"ESP32 sa spust\xed v re\u017eime Access Point (AP)."}),"\n",(0,r.jsx)(n.li,{children:"Spust\xed jednoduch\xfd webov\xfd server, ktor\xfd po pripojen\xed klienta (napr. z mobilu) zobraz\xed HTML str\xe1nku."}),"\n",(0,r.jsx)(n.li,{children:"T\xe1to str\xe1nka bude obsahova\u0165 JavaScript, ktor\xfd vytvor\xed WebSocket spojenie s ESP32."}),"\n",(0,r.jsx)(n.li,{children:"V\u0161etky d\xe1ta prijat\xe9 z cie\u013eov\xe9ho zariadenia sa okam\u017eite posielaj\xfa cez WebSocket do webov\xe9ho prehliada\u010da."}),"\n",(0,r.jsx)(n.li,{children:"D\xe1ta zadan\xe9 vo webovom termin\xe1li sa posielaj\xfa cez WebSocket do ESP32 a n\xe1sledne na TX pin cie\u013eov\xe9ho zariadenia."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pre Bluetooth:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'ESP32 inicializuje Bluetooth a spust\xed "Bluetooth Serial" slu\u017ebu.'}),"\n",(0,r.jsx)(n.li,{children:"Na mobilnom telef\xf3ne alebo PC sa sp\xe1ruje s ESP32."}),"\n",(0,r.jsx)(n.li,{children:"Pomocou akejko\u013evek \u0161tandardnej Bluetooth termin\xe1lovej aplik\xe1cie je mo\u017en\xe9 posiela\u0165 a prij\xedma\u0165 d\xe1ta rovnako ako cez k\xe1blov\xe9 spojenie."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-postup-realiz\xe1cie",children:"5. Postup Realiz\xe1cie"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"F\xe1za 1: Prototyp na Breadboarde"}),". Zapojenie z\xe1kladn\xfdch komponentov (ESP32, CP2102 modul, regul\xe1tor) a otestovanie z\xe1kladnej funkcie USB-TTL prevodn\xedka."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"F\xe1za 2: Implement\xe1cia Firmv\xe9ru"}),". Postupn\xe9 programovanie jednotliv\xfdch modulov (detekcia baud rate, pin swap, Wi-Fi/Bluetooth most)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"F\xe1za 3: V\xfdvoj Webovej Aplik\xe1cie"}),". Tvorba jednoduchej a responz\xedvnej HTML/CSS/JS str\xe1nky pre Wi-Fi termin\xe1l."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"F\xe1za 4: N\xe1vrh a V\xfdroba PCB"}),". Po \xfaspe\u0161nom otestovan\xed prototypu navrhn\xfa\u0165 vlastn\xfa dosku plo\u0161n\xfdch spojov pre kompaktn\xe9 a robustn\xe9 rie\u0161enie."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"F\xe1za 5: Fin\xe1lne Zostavenie a Testovanie"}),". Osadenie PCB, nahratie fin\xe1lneho firmv\xe9ru a komplexn\xe9 testovanie v\u0161etk\xfdch funkci\xed."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6-mo\u017en\xe9-vylep\u0161enia",children:"6. Mo\u017en\xe9 Vylep\u0161enia"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pridanie mal\xe9ho OLED displeja na zobrazenie aktu\xe1lneho stavu (zisten\xe1 baud rate, IP adresa, stav pripojenia)."}),"\n",(0,r.jsx)(n.li,{children:"Implement\xe1cia fyzick\xe9ho prep\xedna\u010da na vypnutie automatickej detekcie a manu\xe1lne nastavenie parametrov."}),"\n",(0,r.jsx)(n.li,{children:"Roz\u0161\xedrenie o logick\xfd analyz\xe1tor alebo podporu pre in\xe9 protokoly (I2C, SPI)."}),"\n",(0,r.jsx)(n.li,{children:"N\xe1vrh 3D tla\u010denej krabi\u010dky."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var o=i(6540);const r={},a=o.createContext(r);function t(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);